#
# Password Management Servlets (PWM)
# http://www.pwm-project.org
#
# Copyright (c) 2006-2009 Novell, Inc.
# Copyright (c) 2009-2016 The PWM Project
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

Category_Description_ACCOUNT_INFO=Show account information to the logged in user.
Category_Description_ACTIVATION=The user activation module enables users to activate an account they have not previously authenticated. The user does not need to know the password to activate the account. Configure settings so that a user may only execute this function once. Existing users should not be able to use this function.
Category_Description_ACTIVE_DIRECTORY=Active Directory specific settings
Category_Description_ADMINISTRATION=Administration
Category_Description_APP_SECURITY=
Category_Description_AUDIT_CONFIG=Auditing
Category_Description_AUDIT_FORWARD=Auditing
Category_Description_AUDITING=Auditing
Category_Description_CAPTCHA=Captcha functionality uses an implementation of reCAPTCHA to prevent non-human attacks.  If this server will be facing the public internet, it is strongly recommended to enable captcha functionality.  reCAPTCHA info can be found at <a href\="http\://www.google.com/recaptcha" target\="_blank">http\://www.google.com/recaptcha/</a><br/><br/>Registration at the reCAPTCHA site will provide a public and private key which must be configured here for reCAPTCHA support.
Category_Description_CAS_SSO=
Category_Description_CHALLENGE_POLICY=Define the challenge policy users will use for populating response answers.
Category_Description_CHALLENGE=Settings that control challenge/response features.  These global settings apply regardless of the challenge policy.  For profile-specific challenge settings, see Profiles --> Challenge Profiles.
Category_Description_CHANGE_PASSWORD=The change password module is the core functionality of the application.  Use these settings to control the behavior and functionality of the change password functionality seen by all users.
Category_Description_DATABASE=Optional database configuration settings.  If configured, a remote RDBMS SQL-complaint database can be used to store data for certain functions.  Any standard RDBMS that supports a standard Java JDBC driver can work.  Upon startup, a database connection will be made and any necessary tables and schema will be created.  Multiple application instances can be configured for the same database instance.
Category_Description_DATABASE_ADV=Advanced database configuration settings.
Category_Description_DATABASE_SETTINGS=Settings
Category_Description_EDIR_CR_SETTINGS=NetIQ eDirectory CR specific settings.
Category_Description_EDIRECTORY=NetIQ eDirectory specific settings.
Category_Description_EDIR_SETTINGS=NetIQ eDirectory specific settings.
Category_Description_EMAIL=<p>Configuration settings for all sent emails.   For email body configuration, both plaintext and HTML settings are provided.  It is encouraged that for each configured setting and locale, both plaintext and HTML email bodies are configured.  Email will be delivered in both formats and the email client can choose which to display.</p> <p>Email definitions may use Macros.  See the "View" menu "Show Macro Help" for more information about Macros.</p>
Category_Description_EMAIL_SETTINGS=
Category_Description_EMAIL_TEMPLATES=
Category_Description_FORGOTTEN_USERNAME=Allow a user to search for a forgotten username using a configurable search filter and attributes.
Category_Description_GENERAL=General settings for the application.  Settings here control the functionality and behavior of the system overall.
Category_Description_GUEST=Note\: The guest user registration module requires that the logged in user has sufficient permissions to create users and, if so configured, to check for duplicate values.
Category_Description_HELPDESK=Helpdesk Administrators
Category_Description_HELPDESK_PROFILE=Profile for helpdesk activities.
Category_Description_HELPDESK_SETTINGS=System-wide settings for helpdesk module.
Category_Description_HTTP_SSO=
Category_Description_HTTPS_SERVER=HTTPS Web Server
Category_Description_INTRUDER_SETTINGS=
Category_Description_INTRUDER=This application has built in intruder detection independent of what your LDAP directory may provide.  Because this application may be exposed directly to the internet, this additional layer of detection helps protect against direct attacks.  The LDAP directory's own internal intruder detection (if enabled) will always be honored as well.  The goal for this intruder detection system isn't to watch for human intruders, it is designed to stop robot or automatic attacks.  It is recommended that the triggers be sufficiently high so that normal user usage will not cause an application-level intruder detection.  Lockouts due to this intruder detection system can not be unlocked by the helpdesk or administrator.
Category_Description_INTRUDER_TIMEOUTS=
Category_Description_LDAP=
Category_Description_LDAP_GLOBAL=Global settings that control the interaction with an LDAP directory.  These settings are applied regardless of the user's LDAP profile.  For profile-specific settings, see Profiles -> LDAP Directory Profiles.
Category_Description_LDAP_PROFILE=Settings that control interaction with the LDAP directory.  Multiple directory profiles can be created to support multiple LDAP user stores.
Category_Description_LDAP_SETTINGS=LDAP Settings
Category_Description_LOGGING=Setting high debug levels can cause undesired overhead and the application may suffer as a result.  Conversely, retaining high-level logs can help aid troubleshooting as well as security forensics.
Category_Description_MODULES=Modules
Category_Description_NAAF=NAAF (Advanced Authentication Framework)
Category_Description_NEWUSER=New user self registration settings.  The new user registration module requires that the proxy user has sufficient permissions to create users and, if so configured, to check for duplicate values.  New users are created in the default LDAP directory profile.
Category_Description_NEWUSER_PROFILE=New user self registration settings.  The new user registration module requires that the proxy user has sufficient permissions to create users and, if so configured, to check for duplicate values.  New users are created in the default LDAP directory profile.
Category_Description_NEWUSER_SETTINGS=New user self registration settings.  The new user registration module requires that the proxy user has sufficient permissions to create users and, if so configured, to check for duplicate values.  New users are created in the default LDAP directory profile.
Category_Description_NOTES=Configuration Notes
Category_Description_OAUTH=Integration with an OAuth identity server for SSO to this application.
Category_Description_ORACLE_DS=Oracle Directory Server specific settings
Category_Description_OTP=Options for time based one time passwords.
Category_Description_PASSWORD_GLOBAL=Password related settings that apply to all users regardless of the password policy or profile appear here.  For profile-specific password settings, see Profiles -> Password Policy Profiles.
Category_Description_PASSWORD_POLICY=Settings that define the LDAP directories that are used by the application.  If the user identities are in multiple LDAP directories, configure each directory as an LDAP Directory Profile.  Within each LDAP directory profile definition you can control the individual servers and other settings for each LDAP directory.
Category_Description_PEOPLE_SEARCH=The people search module provides basic white pages or directory lookup functionality to your users.  Customizations alow easy searching and display quick detailed information about your user's colleagues.
Category_Description_PROFILES=Profiles
Category_Description_RECOVERY=Policies for forgotten password configuration.
Category_Description_RECOVERY_PROFILE=Policies for forgotten password configuration.
Category_Description_RECOVERY_SETTINGS=Settings for forgotten password configuration.
Category_Description_REPORTING=Options to enable and configure reporting.
Category_Description_REST_CLIENT=
Category_Description_REST_SERVER=
Category_Description_SECURITY=Settings that control security aspects of the system.  In some cases, the security features of this application may interfere with integration of other systems.  Use caution when changing these settings as the overall security of the application could be impacted.
Category_Description_SETTINGS=Settings
Category_Description_SHORTCUT=The shortcut menu is used to display a list of click-able links to users.  This functionality may be useful as a basic landing page for users.
Category_Description_SMS=Configuration settings for interfacing with SMS service gateways.  The SMS gateway should support REST web service to use with this application.  The service provider will provide you with information that will allow you to complete the settings here.
Category_Description_SMS_GATEWAY=
Category_Description_SMS_MESSAGES=
Category_Description_SSO=
Category_Description_TEMPLATES=
Category_Description_TOKEN=Options for email and sms tokens sent to users.  Chose a token method appropriate to your environment.
Category_Description_UI_FEATURES=
Category_Description_UI_WEB=
Category_Description_UPDATE=The update user profile module will force/allow the user to update the attributes configured here.  This is useful for forcing the user to populate to update some piece of information.
Category_Description_UPDATE_SETTINGS=.
Category_Description_UPDATE_PROFILE=.
Category_Description_USER_HISTORY=Auditing
Category_Description_USER_INTERFACE=These settings control application wide features and display format that is visible to the end user.
Category_Description_WEB_SECURITY=
Category_Description_WEB_SERVICES=Settings that are of interest to developers or component integrators.
Category_Label_ACCOUNT_INFO=Account Information
Category_Label_ACTIVATION=User Activation
Category_Label_ACTIVE_DIRECTORY=Microsoft Active Directory
Category_Label_ADMINISTRATION=Administration
Category_Label_HTTPS_SERVER=HTTPS Server
Category_Label_APP_SECURITY=Application Security
Category_Label_AUDIT_CONFIG=Audit Configuration
Category_Label_AUDIT_FORWARD=Audit Forwarding
Category_Label_AUDITING=Auditing
Category_Label_CAPTCHA=Captcha
Category_Label_CAS_SSO=CAS SSO
Category_Label_CHALLENGE=Challenge Settings
Category_Label_CHALLENGE_POLICY=Challenge Policies
Category_Label_CHANGE_PASSWORD=Change Password
Category_Label_DATABASE=Database (Remote)
Category_Label_DATABASE_ADV=Advanced
Category_Label_DATABASE_SETTINGS=Connection
Category_Label_EDIR_CR_SETTINGS=eDirectory Challenge Sets
Category_Label_EDIRECTORY=NetIQ eDirectory
Category_Label_EDIR_SETTINGS=eDirectory Settings
Category_Label_EMAIL=Email
Category_Label_EMAIL_SETTINGS=Email Settings
Category_Label_EMAIL_TEMPLATES=Email Templates
Category_Label_FORGOTTEN_USERNAME=Forgotten Username
Category_Label_GENERAL=Application
Category_Label_GUEST=Guest Registration
Category_Label_HELPDESK=Helpdesk
Category_Label_HELPDESK_PROFILE=Helpdesk Profiles
Category_Label_HELPDESK_SETTINGS=Helpdesk Settings
Category_Label_HTTP_SSO=HTTP SSO
Category_Label_INTRUDER=Intruder Detection
Category_Label_INTRUDER_SETTINGS=Intruder Settings
Category_Label_INTRUDER_TIMEOUTS=Intruder Timeouts
Category_Label_LDAP_GLOBAL=Global
Category_Label_LDAP=LDAP
Category_Label_LDAP_PROFILE=LDAP Directories
Category_Label_LDAP_SETTINGS=LDAP Settings
Category_Label_LOGGING=Logging
Category_Label_MODULES=Modules
Category_Label_NAAF=NAAF
Category_Label_NEWUSER=New User Registration
Category_Label_NEWUSER_PROFILE=New User Profiles
Category_Label_NEWUSER_SETTINGS=New User Settings
Category_Label_NOTES=Configuration Notes
Category_Label_OAUTH=OAuth
Category_Label_ORACLE_DS=Oracle DS
Category_Label_OTP=One Time Password
Category_Label_PASSWORD_GLOBAL=Password Settings
Category_Label_PASSWORD_POLICY=Password Policies
Category_Label_PEOPLE_SEARCH=People Search
Category_Label_PROFILES=Policies
Category_Label_RECOVERY=Forgotten Password
Category_Label_RECOVERY_PROFILE=Forgotten Password Profiles
Category_Label_RECOVERY_SETTINGS=Forgotten Password Settings
Category_Label_REPORTING=Reporting
Category_Label_REST_CLIENT=REST Clients
Category_Label_REST_SERVER=REST Services
Category_Label_SECURITY=Security
Category_Label_SETTINGS=Settings
Category_Label_SHORTCUT=Shortcut Menu
Category_Label_SMS_GATEWAY=SMS Gateway
Category_Label_SMS_MESSAGES=SMS Messages
Category_Label_SMS=SMS
Category_Label_SSO=Single Sign On
Category_Label_TEMPLATES=Default Settings
Category_Label_TOKEN=Tokens
Category_Label_UI_FEATURES=UI Features
Category_Label_UI_WEB=Look & Feel
Category_Label_UPDATE=Update Profile
Category_Label_UPDATE_SETTINGS=Update Profile Settings
Category_Label_UPDATE_PROFILE=Update Profile Profiles
Category_Label_USER_HISTORY=User History
Category_Label_USER_INTERFACE=User Interface
Category_Label_WEB_SECURITY=Web Security
Category_Label_WEB_SERVICES=Web Services
Setting_Description_accountInfo.viewStatusValues=
Setting_Description_activateUser.allowUnlock=Try to unlock the user account during activation.  If true, and if the user's account is locked the user account will be unlocked.
Setting_Description_activateUser.enable=Enable the new user activation module.
Setting_Description_activateUser.form=Form fields for activate user module.  Each attribute will be required to be entered by the user.  Ideally, the user will be required to enter some personal data that is not publicly known.
Setting_Description_activateUser.queryMatch=Only allow users who match this query to be activated.  Generally, you will only allow users who have never been authenticated and are not disabled to activate.  The default example uses the last login time attribute(s) on the user object to determine if the user has never logged in.  It is the responsibility of the administrator to ensure this activation feature works correctly.  Misconfiguration could potentially result in unintended activations being able to take place.
Setting_Description_activateUser.searchFilter=LDAP search filter used to search for users during user activation. &nbsp;The LDAP search filter should include each attribute in the <i>Activate User Form</i>.  Tokens made of a form item name (such as <code>cn</code>) enclosed with a percent sign <code>%cn%</code> will be replaced with values supplied by the user.<br><br>For example, if the <i>Activate User Form</i> included the attributes <code>cn</code> and <code>sn</code>, then this filter may be appropriate\:<br><br><code>(&amp;(objectClass\=person)(cn\=%cn%)(sn\=%sn%))</code><br><br>Any attributes that are listed in the form but are not used in the search filter will tested by performing an LDAP compare operation with the user supplied value.<br><br>If this setting is left blank, a search filter based on the required items in the <i>Activate User Search Form</i> will be automatically generated.
Setting_Description_activateUser.token.sendMethod=Set the method(s) used for sending the token code to the user.
Setting_Description_activateUser.writePostAttributes=Actions to execute after a user is activated and has changed/set their initial password.  Typically this is used to activate the account, as well as put some searchable indicator.<br/><br/>  Macros may be used.
Setting_Description_activateUser.writePreAttributes=Actions to execute after a user is activated but before the password is set.  Typically this is used to activate the account, as well as put some searchable indicator.<br/><br/>  Macros may be used.
Setting_Description_https.server.cert.password=HTTPS Certificate Password
Setting_Description_https.server.cert.pkcs12=HTTPS Certificate PKCS12
Setting_Description_https.server.tls.protocols=HTTPS TLS Protocols
Setting_Description_https.server.tls.ciphers=HTTPS TLS Cipher List
Setting_Description_audit.syslog.certificates=
Setting_Description_audit.syslog.servers=Syslog audit server.  When configured, all audit events will be forwarded to the specified syslog server.  The format is <b>&lt;protocol&gt;</b>,<b>&lt;address&gt;</b>,<b>&lt;port&gt;</b>.  The value for <b>&lt;protocol&gt;</b> can be either <i>udp</i> or <i>tcp</i>.<br/><br/>Examples\:<table><tr><td>Protocol</td><td>Address</td><td>Port</td><td>Setting</td><tr><tr><td>UDP</td><td>127.0.0.1</td><td>514</td><td>udp,127.0.0.1,514</td><tr><tr><td>TCP</td><td>central-syslog.example.com</td><td>514</td><td>tcp,central-syslog.example.com,514</td><tr><tr><td>TLS</td><td>secure-syslog.example.com</td><td>6514</td><td>tls,central-syslog.example.com,6514</td><tr></table>
Setting_Description_audit.system.eventList=Event types to record and act upon.
Setting_Description_audit.user.eventList=Event types to record and act upon.
Setting_Description_audit.userEvent.toAddress=Send an email User Audit events occur to these email addresses.
Setting_Description_captcha.protectedPages=Pages protected by CAPTCHA.  CAPTCHA validation is required only once per session.  Thus, after a user passes captcha validation during a session, the user will not be forced to pass the captcha again despite accessing a second module enabled here.
Setting_Description_captcha.recaptcha.privateKey=Private reCAPTCHA key.  If blank no captcha verification will be performed.
Setting_Description_captcha.recaptcha.publicKey=Public reCAPTCHA key.  If blank no captcha verification will be performed.
Setting_Description_captcha.skip.cookie=Allows for skipping the captcha request if a known browser cookie value is held by the browser the cookie is stored in a cookie named 'captcha-key'.  If the value is correct,then the captcha check is skipped.  The cookie value is stored in the browser after a successful captcha check.<br/><br/>If blank, then no cookie will be read/stored.  If set to 'INSTANCEID', then the instanceID is used.  If set to any other value, then the literal value will be used.
Setting_Description_captcha.skip.param=Allows for skipping the captcha request if a known parameter is passed as a request parameter with a key of "skipCaptcha".   This is useful for "internal" clients / links where the captcha is unneccessary.<br/><br/>For example, if the value is 'okay', a request to\:<br/><br/><i>/public/forgottenpassword?skipCaptcha\=okay</i><br/><br/>would cause captcha to be bypassed.
Setting_Description_cas.clearPassUrl=For <a href\="http\://www.jasig.org/cas">CAS</a> authentication integration, enter the ClearPass url here.  If blank, CAS authentication integration will be disabled.<br/><br/>You will also need to edit the <i>WEB-INF/web.xml</i> file to enable CAS integration.  Uncomment the section for the CAS servlet filters, and modify the CAS servlet parameters as appropriate for your configuration.
Setting_Description_challenge.allowDuplicateResponses=Control if each response is required to be unique
Setting_Description_challenge.allowSetup.queryMatch=Permission used to determine if a user is a permitted to configure challenges.  The user must be returned during this ldap query or else the user will not be permitted to configure challenges.
Setting_Description_challenge.allowUnlock=Allow unlock during forgotten password.  If true, and if the user's account is locked due to too many invalid login attempts, and the user's password is not expired, then the user will be given a chance to unlock their account instead of resetting their password.
Setting_Description_challenge.caseInsensitive=Control the case sensitivity of responses.  If marked true, then responses will be deemed correct even if case is wrong.  Changing this value does not change existing stored responses -- the case sensitive flag is saved on each user's stored response.
Setting_Description_challenge.enable=If enabled, save responses page will be available to users.
Setting_Description_challenge.enforceMinimumPasswordLifetime=When the user authenticates via ForgottenPassword, should the password minimum lifetime (if set) be enforced?  If this setting is true, the user cannot change password if the minimum lifetime hasn't passed.  If false, the user is permitted to change their password when authenticated via Forgotten Password even if the minimum lifetime has not changed.
Setting_Description_challenge.forceSetup=If true, the user will be directed to configure challenge/response when logging in.  The user is forced to enter responses if they do not have a current valid response stored.
Setting_Description_challenge.helpdesk.minRandomsSetup=The minimum number of helpdesk random questions the user is required to complete during Response Setup.  If this number is higher then the available randoms, or lower then the minimum required, it will be adjusted accordingly.  Set to zero to force all available randoms to be configured at time of setup.
Setting_Description_challenge.helpdesk.randomChallenges=The user may be required to supply answers to all or some of these questions when setting up their responses, as controlled by the "Minimum Helpdesk Random Challenges Required During Setup" setting.  The questions and answers will be visible to helpdesk users, but are not used for forgotten password recovery.
Setting_Description_challenge.helpdesk.requiredChallenges=The user must supply answers for all of these questions when setting up their responses.  The questions and answers will be visible to helpdesk users, but are not used for forgotten password recovery.
Setting_Description_challenge.minRandomRequired=Minimum number of random questions required at time of forgotten password recovery.
Setting_Description_challenge.minRandomsSetup=The minimum number of random questions the user is required to complete during Response Setup.  If this number is higher than the available randoms, or lower than the minimum required, it will be adjusted accordingly.  Set to zero to force all available random questions to be configured at time of setup.
Setting_Description_challenge.policy.queryMatch=Challenge Profile Match
Setting_Description_challenge.profile.list=List of Challenge Profiles.  When multiple challenge policies are configured, all profiles except for the default are evaluated in order to check if the <i>Challenge Profile Query Match</i> during user authentication matches the user.
Setting_Description_challenge.randomChallenges=Random Questions for Challenge/Response.   Some of these questions will be presented to the user during forgotten password - the number set in the "Minimum Password Required" setting.  The user may be required to supply answers to all or some of these questions when setting up their responses, this is controlled by the "Minimum Random Challenges Required During Setup" setting.
Setting_Description_challenge.requiredAttributes=Required LDAP attributes for forgotten password authentication.  These attributes will be required to be supplied by the user as part of the forgotten password autentication process.   The LDAP Proxy User will require LDAP <i>compare</i> permission to these attributes.
Setting_Description_challenge.requiredChallenges=Required Questions for Challenge/Response.  The user must supply answers for all of these questions when setting up their responses.  Additionally, answers to these questions must be supplied during forgotten password.
Setting_Description_challenge.requireResponses=If enabled, the user will need to supply previously saved responses in order to proceed with forgotten password recovery.
Setting_Description_challenge.showConfirmation=Show the responses to the user after they configure them.  This will give your users an opportunity to read and review their responses before submitting, however it will show the responses on the screen and make them visible to anyone else watching the users screen.
Setting_Description_challenge.token.sendMethod=Set the method(s) used for sending the token code or new password to the user.
Setting_Description_challenge.userAttribute=Attribute to use for response storage when storing to ldap directory.  If blank, responses will not be stored in the ldap directory.  If configured, responses will be stored to the ldap directory in addition to any other configured storage repositories.
Setting_Description_changePassword.writeAttributes=Actions to take when after a user change password event occurs.  These actions will be invoked just after writing the password.  Macros can be used within the action and will be expanded based on the logged in user.
Setting_Description_command.checkResponses.queryMatch=If the command servlet is called with the checkResponses command\:<br/><br/><i>/private/CommandServlet?processAction\=checkResponses</i><br/><br/>the user is first checked to see if they match the following LDAP query before the user's password responses is checked.  If the user does not match this query, then the user's responses will not be checked, and the user will be redirected to the forward URL.
Setting_Description_db.classname=Database JDBC driver class name.  Consult the database vendor to determine the correct class name for your database.<br/><br/><table><tr><td class\="key">Database Type</td><td class\="key">Example Class Name</td></tr><tr><td>MS-SQL</td><td>com.microsoft.sqlserver.jdbc.SQLServerDriver</td></tr><tr><td>MS-SQL using jTDS</td><td>net.sourceforge.jtds.jdbc.Driver</td></tr><tr><td>Oracle</td><td>oracle.jdbc.OracleDriver</td></tr></table><div class="footnote">The above are examples only, consult your database documentation for the proper setting value.</div>
Setting_Description_db.columnType.key=Database column type for key columns.  The column type is used only during schema creation.  All tables are two columns, a key and a value column.  For most databases the standard VARCHAR column format is appropriate for the key column.  Data stored in the key column will generally be US-ASCII keys.
Setting_Description_db.columnType.value=Database column type for value columns.  The column type is used only during schema creation.  All tables are two columns, a key and a value column.  For most databases the standard TEXT column format is appropriate for the value column.  Data stored in the value column will generally be UTF-8 formatted XML, json or other text-based value data.
Setting_Description_db.debugTrace.enable=When enabled, database read/write activity and data is logged to the TRACE debug output.  Warning\!  Enabling this option can cause security-sensitive information to be sent to the debug output, including passwords.
Setting_Description_db.jdbc.driver=Database JDBC Driver JAR or ZIP file supplied by the database vendor.  The file must be under 10MB in size to upload.  The file contents will be stored as part of the application configuration file.
Setting_Description_db.password=Database connection password
Setting_Description_db.url=Database connection string in standard JDBC format.  Your database administrator should be able to help you with this setting.  This setting configures the Java JDBC database driver with the information required to reach your database server such as IP address, port number, and DB name.<br/><br/><table><tr><td class\="key">Database Type</td><td class\="key">Example Connection String</td></tr><tr><td>MS-SQL </td><td>jdbc\:sqlserver\://host.example.net\:port;databaseName\=@PwmAppName@</td></tr><tr><td>MS-SQL using jTDS</td><td>jdbc\:jtds\:sqlserver\://host.example.net\:port/@PwmAppName@</td></tr><tr><td>Oracle</td><td> jdbc:oracle:thin:@//host.example.net:1521/@PwmAppName@</td></tr></table><div class="footnote">The above are examples only, consult your database documentation for the proper connection string syntax.</div>
Setting_Description_db.username=Database connection username
Setting_Description_db.vendor.template=Database vendor.
Setting_Description_disallowedInputs=Disallowed values.  If any input values (on any http parameter) matches these patterns, the matching portion will be stripped from the input.
Setting_Description_display.accountInformation=Show User Account Information menu on main menu.
Setting_Description_display.activateUser.agreement=<p>Message to display to user before being allowed to activate their account. If blank, the activate user agreement page will not be displayed to the user. This message may include HTML tags.
Setting_Description_display.css.customMobileStyle=Contents of the embedded mobile CSS Stylesheet.   The setting <a data-gotoSettingLink\="interface.theme">@PwmSettingReference\:interface.theme@</a> must be set to <code>Embedded</code> for this setting to be useful.  The contents of this setting will be served from the virtual url of <code>/public/resources/themes/embed/mobileStyle.css</code>.
Setting_Description_display.css.customMobileStyleLocation=URL of the custom mobile CSS resource.  The setting <a data-gotoSettingLink\="interface.theme">@PwmSettingReference\:interface.theme@</a> must be set to <code>Custom</code> for this setting to be useful.  If this URL is relative it will be appended to the context path.
Setting_Description_display.css.customStyle=Contents of the embedded CSS Stylesheet.   The setting <a data-gotoSettingLink\="interface.theme">@PwmSettingReference\:interface.theme@</a> must be set to <code>Embedded</code> for this setting to be useful.   The contents of this setting will be served from the virtual url of <code>/public/resources/themes/embed/style.css</code>.
Setting_Description_display.css.customStyleLocation=URL of the custom CSS resource.  The setting <a data-gotoSettingLink\="interface.theme">@PwmSettingReference\:interface.theme@</a> must be set to <code>Custom</code> for this setting to be useful.  If this URL is relative it will be appended to the context path.
Setting_Description_display.custom.resourceBundle=<p>This setting allows a custom ZIP file containing static HTTP resources to be served by the application from the HTTP path <code>/public/resources/</code> to be added to the configuration.</p>The maximum zip file size is 10MB.  Files included should be types of html, text, images, etc.  No server side processing will be performed when serving these files.
Setting_Description_display.hideConfigHealthWarnings=Hide health warnings about configuration issues from the health status monitors.
Setting_Description_display.homeButton=When authenticated, show a "home" button in header and/or other menus as appropriate.
Setting_Description_display.idleTimeout=Show the user's remaining idle time, and when that time reaches zero, redirect the user to the logout page.
Setting_Description_display.js.custom=Contents of this setting will be injected into all pages inside a <script></script> html tag near the bottom of the page.
Setting_Description_display.logoutButton=When authenticated, show a logout button in header and/or other menus as appropriate.
Setting_Description_display.maskPasswordFields=Mask sensitive input fields with standard "password" masking.  If set to false, sensitive fields will be shown as normal text input fields.
Setting_Description_display.maskResponseFields=Mask challenge/response answer input fields with standard "password" masking.  If set to false, response fields will be shown as normal text input fields.  This setting applies to both setup responses and forgotten password response entry screens.
Setting_Description_display.newuser.agreement=<p>Message to display to user before being allowed to register a new user. If blank, the new user agreement page will not be displayed to the user. This message may include HTML tags.
Setting_Description_display.password.changeAgreement=<p>Message to display to user before being allowed to change password. If blank, the change password agreement page will not be displayed to the user. This message may include HTML tags.</p> <p>This setting may use Macros.  See the "View" menu "Show Macro Help" for more information about Macros.</p>
Setting_Description_display.password.completeMessage=<p>Message to display to user when password change is completed.  If blank, the change password completion page will not be displayed to the user. This message may include HTML tags.</p> <p>This setting may use Macros.  See the "View" menu "Show Macro Help" for more information about Macros.</p>
Setting_Description_display.password.guideText=<p>Text (with HTML tags/formatting) to show user on password guide page.  This will show up as a "password guide" link and pop-up dialog.  Leave blank to not show the password guide link.</p><p>This setting may use Macros.  See the "View" menu "Show Macro Help" for more information about Macros.</p>
Setting_Description_display.passwordHistory=Show logged in users their password event history.  The password event history will appear as a tab on the account information page.
Setting_Description_display.showCancelButton=Where appropriate, show a "Cancel" button to user.  Pressing the cancel button will send the user to the forwardURL (or logoutURL if the password has been modified).  The cancel button will show on the change password screen only if the password is not expired.  The Cancel button will only show up if the browser has javaScript enabled.
Setting_Description_display.showDetailedErrors=While useful for administrators, especially during configuration, showing detailed error messages to users may be confusing as well as a security hazard.  This setting is ignored until the configuration is closed.
Setting_Description_display.showHidePasswordFields=Where available, allow the user to toggle the show/hide masked (hidden) data input fields.  This setting applies to all HTML masked password fields, regardless of the actual data type.
Setting_Description_display.showLoginPageOptions=If true, the login page will display the "Forgotten Password" and other options (if those components are enabled).
Setting_Description_display.showSuccessPage=When an activity completes successfully, Normally a "success" page is shown to the user informing the user the action is completed.  This page can be bypassed by changing this setting to false.
Setting_Description_display.updateAttributes.agreement=<p>Message to display to user before being allowed to update their profile. If blank, the update profile agreement page will not be displayed to the user. This message may include HTML tags.
Setting_Description_email.activation=Email sent to a user just after a successful activation.
Setting_Description_email.activation.token=Email sent during activation verification process.  %TOKEN% can be used to insert the token value into the email.
Setting_Description_email.adminAlert.toAddress=Send an email when System Audit events occur to these email addresses.
Setting_Description_email.challenge.token=Email sent during forgotten password verification process.  %TOKEN% can be used to insert the token value into the email.
Setting_Description_email.changePassword=Email sent to user when a password change occurs.  This email is only sent when the user changes their own password.
Setting_Description_email.changePassword.helpdesk=Email sent to user when the helpdesk changes the user's password.  Macros used for this setting will be expanded based on the user who's password is being changed, not the helpdesk user.
Setting_Description_email.default.fromAddress=Default From Address
Setting_Description_email.guest=Email sent to newly created guest users.
Setting_Description_email.helpdesk.token=Email sent during helpdesk verification process.  %TOKEN% can be used to insert the token value into the email.
Setting_Description_email.intruderNotice=Email sent when a userDN intruder lockout occurs
Setting_Description_email.newUser=Email sent to newly created users.
Setting_Description_email.newUser.token=Email sent during new user verification process.  %TOKEN% can be used to insert the token value into the email.
Setting_Description_email.queueMaxAge=Maximum age (in seconds) an email can wait in the send queue.  If an email is in the send queue longer than this time, it will be discarded.  Emails only persist in the send queue if there is an IO or network error to the smtp server while sending the email.
Setting_Description_email.sendpassword=Email sent during forgotten password reset process if send password functionality is enabled.
Setting_Description_email.sendUsername=Email sent (if configured) for forgotten username process.
Setting_Description_email.smtp.address=Any emails generated by will be sent via this server.  Removing this setting will prevent sending any email at all.  Be sure the server listed here allows relaying.  For best results, use a local smtp server.
Setting_Description_email.smtp.advancedSettings=Name/Value settings to control the behavior of the mail agent.Available settings are defined as part of the <a href\="https\://javamail.java.net/nonav/docs/api/com/sun/mail/smtp/package-summary.html">JavaMail API</a>. The settings must be in "name\=value" format, where name is the key value of a valid JavaMail API setting.
Setting_Description_email.smtp.port=Network port number for SMTP server
Setting_Description_email.smtp.username=Any emails generated will be sent by logging into server with this user.  A blank value will here will send SMTP messages without authentication.
Setting_Description_email.smtp.userpassword=Any emails generated will be sent by logging into server with this password.  A blank value will here will send SMTP messages without authentication.
Setting_Description_email.updateguest=Email sent to updated guest users.
Setting_Description_email.updateProfile=Email sent to users after a profile update.
Setting_Description_email.updateProfile.token=Email sent to user during profile email validation.
Setting_Description_email.userMailAttribute=User LDAP attribute containing the user's email address.
Setting_Description_enableSessionVerification=If enabled, browser sessions will be verified using an HTTP redirect and verification code.  This verification proves that the browser can correctly establish a session with the server.  Verification proves the browser either supports cookies or URL sessions (if enabled) and the communication channel between browser and application server is 'sticky' when their are multiple server instances.  Additionally it helps prevent some types of XSS attacks.<br/><br/>The pre-load browser cache will show a "please wait" screen to the user during the verification.  This has the added benefit that many of the HTTP resources (javascript, css, images, etc) will be "pre-cached" by the browser before any actual pages are loaded.
Setting_Description_events.alert.dailySummary.enable=If true, send an email alert once a day (at 0\:00 GMT) summary of the day's statistics and health.
Setting_Description_events.audit.maxAge=Maximum age (in seconds) of the local audit event log.  Default is 30 days.
Setting_Description_events.fileAppender.level=Level at which to log events to the local File Log.  Log files are written to the servlet's WEB-INF/logs directory.
Setting_Description_events.java.log4jconfigFile=Location and name of a log4j xml configuration file.  If specified, this file will be used to configure the log4j system.  If unspecified, the application logging will be configured according to the settings here any and configuration file will be ignored. The location specified by this setting is relative to the <i>WEB-INF</i> directory.  An example <i>log4jconfig-sample.xml</i> file is included in the <i>WEB-INF</i> directory.
Setting_Description_events.java.stdoutLevel=Default Log level for stdout.  Most servlet containers will redirect stdout to a log file.  For example, tomcat logs stdout output to the <i>tomcat/logs/catalina.out</i> file by default.
Setting_Description_events.ldap.attribute=Attribute used to write a user event attribute in ldap.  The user event log attribute will hold an XML document with the users Event history.  Leave blank to disable logging event history to ldap.
Setting_Description_events.ldap.maxEvents=Maximum number of events to hold in the event history attribute for a user.
Setting_Description_events.pwmDB.logLevel=Level at which to log events in the LocalDB.  Log events written to the LocalDB can be viewed in the administrator event log viewer.
Setting_Description_events.pwmDB.maxAge=Maximum age of events stored in LocalDB. <br/><br/>This setting does not effect log files configured in log4jconfig.xml or tomcat's log file settings.<br/><br/>Events older than the configured value here will be periodically purged.  Value is specified in seconds.  Default is 4 weeks (60s * 60m * 24h * 7d * 4w \= 2419200).  A value of zero will cause events not to be removed due to age.
Setting_Description_events.pwmDB.maxEvents=Maximum log events stored in LocalDB.  This number of events will be retained in the LocalDB database and use these to display in the admin event log screen.<br/><br/>This setting does not effect the normal log files configured in log4jconfig.xml or tomcat's log file settings.<br/><br/>Approximately 100MB of disk space will be consumed for each 100,000 log events.
Setting_Description_events.user.eventList=Event types to store on user-specific audit history.
Setting_Description_events.user.storageMethod=Data store used for user-specific audit history.  If using LDAP, this number should be kept small to avoid an unreasonably lengthy LDAP attribute value size.
Setting_Description_expireCheckDuringAuth=When the user is authenticated, should there be a check to see if the user's password is expired (or about to expire based on the expirePreTime).  If this is set to true, and the user's password is expired, they will be forced to the expire password page.
Setting_Description_expirePreTime=Number of seconds before a user's password expires in which to force the user to change their password.  If the user's password will expire within this time frame, the system will behave as if the user's password has already expired. <br/><br/>Setting this value to a day or so will prevent most cases of a user's password expiring while they are logged in.  The recommend setting for this value is 86400 (1 day).
Setting_Description_expireWarnTime=Number of seconds before a user's password expires in which to warn the user to change their password.  If the user's password will expire within this time frame, the system will warn the user during a CommandServlet checkExpire or checkAll operation. <br/><br/>If this time is zero or less than the expirePreTime, this feature will be disabled.  The recommended setting for this value is 432000 (5 days).
Setting_Description_external.destToken.urls=This RESTful client API is provided to allow flexibility in reading of destination token addresses and how they are displayed to the user.<br/><br/>When this setting is populated with a valid URL, just before a token is sent to a user, an HTTP POST request will be made.  The body of the post will include the user's originally generated destination token address(s) as well as additional user information.  An example of the request data is provided here (it may vary depending on what data is available, and at what point the token is being issued)\:\n<pre style\="overflow\: auto; max-height\:200px; border\: 1px black">\n{\n   "tokenDestination"\:{\n      "email"\:"ablake@example.com",\n      "sms"\:"555-555-5555"\n   },\n   "userInfo"\:{\n      "userDN"\:"_default|CN\\u003dAllison Blake,OU\\u003dNYC,OU\\u003dPeople,DC\\u003dad,DC\\u003dism,DC\\u003dexample,DC\\u003dcom"\n      "userID"\:"ablake",\n      "userEmailAddress"\:"ablake@example.com",\n      "passwordExpirationTime"\:"2383-02-20T09\:10\:33Z",\n      "passwordLastModifiedTime"\:"2014-01-21T09\:10\:33Z",\n      "requiresNewPassword"\:false,\n      "requiresResponseConfig"\:true,\n      "requiresUpdateProfile"\:true,\n      "passwordStatus"\:{\n         "expired"\:false,\n         "preExpired"\:false,\n         "violatesPolicy"\:false,\n         "warnPeriod"\:false\n      },\n      "passwordPolicy"\:{\n         "MaximumNumeric"\:"0",\n         "MinimumSpecial"\:"0",\n         "AllowLastCharSpecial"\:"true",\n         "ADComplexity"\:"false",\n         "RegExNoMatch"\:"",\n         "AllowSpecial"\:"true",\n         "MaximumSpecial"\:"0",\n         "MinimumLowerCase"\:"0",\n         "MaximumRepeat"\:"0",\n         "MinimumUnique"\:"0",\n         "MinimumNumeric"\:"0",\n         "MinimumLength"\:"2",\n         "DisallowedValues"\:"test\\npassword",\n         "CaseSensitive"\:"true",\n         "RegExMatch"\:"",\n         "DisallowCurrent"\:"false",\n         "MaximumUnique"\:"0",\n         "AllowFirstCharSpecial"\:"true",\n         "MinimumLifetime"\:"0",\n         "ExpirationInterval"\:"0",\n         "UniqueRequired"\:"false",\n         "MaximumSequentialRepeat"\:"0",\n         "ChallengeResponseEnabled"\:"false",\n         "AllowNumeric"\:"true",\n         "EnforceAtLogin"\:"false",\n         "AllowFirstCharNumeric"\:"true",\n         "EnableWordlist"\:"true",\n         "MaximumLength"\:"64",\n         "DisallowedAttributes"\:"sn\\ncn\\ngivenName",\n         "AllowLastCharNumeric"\:"true",\n         "PolicyEnabled"\:"true",\n         "MaximumUpperCase"\:"0",\n         "MinimumUpperCase"\:"0",\n         "ChangeMessage"\:"",\n         "MaximumLowerCase"\:"0"\n      },\n      "passwordRules"\:[\n         "Password is case sensitive.",\n         "Must be at least 2 characters long.",\n         "Must not include any of the following values\:  test password",\n         "Must not include part of your name or username.",\n         "Must not include a common word or commonly used sequence of characters."\n      ]\n   }\n}\n</pre>The web service must then respond with a body that includes a value for the tokenDestination values provided in the request, as well as a display value, for example\:\n<pre style\="overflow\: auto; max-height\:200px; border\: 1px black">\n{\n    "email"\:"ablake@example.org",\n    "sms"\:"555-555-5555",\n    "displayValue"\:"e****@example.org or 555-555-****"\n}\n</pre>The returned values for email and sms will then be substituted for the original values, and if the destination is then displayed to the user, the displayValue is used of the actual destination email or sms value.  If an error occurs during the web service call, the user will be shown an error.
Setting_Description_external.macros.urls=<p>This RESTful client API is provided to allow additional macro functions.</p><p>Each URL listed will be used by the macro engine with a format such that @External1\:value@ corresponds to the first URL, and @External2\:value@ corresponds to the second URL and so on.</p>  The value is passed as part of the JSON data sent to the web service.  User information will be passed only if the user is authenticated at the time of the invocation.  The input value is sent from the macro declartion.  The following is an example of the body of the HTTP POST request made by this application.</p>\n<pre style\="overflow\: auto; max-height\:200px; border\: 1px black">\n{\n   "input"\:"macroInput",\n   "userInfo"\:{\n      "userDN"\:"_default|cn\\u003dablake,ou\\u003dusers,o\\example",\n      "userID"\:"ablake",\n      "userEmailAddress"\:"ablake@example.com",\n      "passwordExpirationTime"\:"2014-03-04T00\:06\:03Z",\n      "passwordLastModifiedTime"\:"2014-02-02T00\:06\:03Z",\n      "requiresNewPassword"\:false,\n      "requiresResponseConfig"\:false,\n      "requiresUpdateProfile"\:false,\n      "passwordStatus"\:{\n         "expired"\:false,\n         "preExpired"\:false,\n         "violatesPolicy"\:false,\n         "warnPeriod"\:false\n      },\n      "passwordPolicy"\:{\n         "MaximumNumeric"\:"0",\n         "MinimumSpecial"\:"0",\n         "AllowLastCharSpecial"\:"true",\n         "ADComplexity"\:"false",\n         "RegExNoMatch"\:"",\n         "AllowSpecial"\:"true",\n         "MaximumSpecial"\:"0",\n         "MinimumLowerCase"\:"0",\n         "MinimumUnique"\:"0",\n         "MinimumNumeric"\:"1",\n         "MinimumLength"\:"8",\n         "DisallowedValues"\:"test\\npassword",\n         "CaseSensitive"\:"true",\n         "RegExMatch"\:"",\n         "DisallowCurrent"\:"false",\n         "AllowFirstCharSpecial"\:"true",\n         "MinimumLifetime"\:"0",\n         "ExpirationInterval"\:"2592000",\n         "UniqueRequired"\:"false",\n         "MaximumSequentialRepeat"\:"0",\n         "AllowNumeric"\:"true",\n         "AllowFirstCharNumeric"\:"true",\n         "EnableWordlist"\:"true",\n         "MaximumLength"\:"12",\n         "DisallowedAttributes"\:"sn\\ncn\\ngivenName",\n         "AllowLastCharNumeric"\:"true",\n         "PolicyEnabled"\:"true",\n         "MaximumUpperCase"\:"0",\n         "MinimumUpperCase"\:"0",\n         "ChangeMessage"\:"Please change your password to meet the corporate policy",\n         "MaximumLowerCase"\:"0"\n      },\n      "passwordRules"\:[\n         "Password is case sensitive.",\n         "Must be at least 8 characters long.",\n         "Must be no more than 12 characters long.",\n         "Must include at least 1 number.",\n         "Must not include any of the following values\:  test password",\n         "Must not include part of your name or username.",\n         "Must not include a common word or commonly used sequence of characters."\n      ]\n   }\n}\n</pre>The web service must then respond with a body that includes a value for the tokenDestination values provided in the request, as well as a display value, for example\:\n<pre style\="overflow\: auto; max-height\:200px; border\: 1px black">\n{\n   "output"\:"macro api output"\n}\n</pre>The output value will then be used as the macro substituion value.
Setting_Description_external.pwcheck.urls=This RESTful client API is provided to allow additional password rule checking to the application.<br/><br/>When this setting is populated with a valid URL, an HTTP POST request will be made during the password validation operation.  The body of the post will include the user's desired password as well as additional user information.  An example of the request data is provided here (it may vary depending on what data is available, and at what point the API is being invoked)\:\n<pre style\="overflow\: auto; max-height\:200px; border\: 1px black">\n{\n   "password"\:"password1234",\n   "userInfo"\:{\n      "userDN"\:"_default|cn\\u003dablake,ou\\u003dusers,o\\u003dexample",\n      "userID"\:"ablake",\n      "userEmailAddress"\:"ablake@example.com",\n      "passwordExpirationTime"\:"2014-03-04T00\:06\:03Z",\n      "passwordLastModifiedTime"\:"2014-02-02T00\:06\:03Z",\n      "requiresNewPassword"\:false,\n      "requiresResponseConfig"\:false,\n      "requiresUpdateProfile"\:false,\n      "passwordStatus"\:{\n         "expired"\:false,\n         "preExpired"\:false,\n         "violatesPolicy"\:false,\n         "warnPeriod"\:false\n      },\n      "passwordPolicy"\:{\n         "MaximumNumeric"\:"0",\n         "MinimumSpecial"\:"0",\n         "AllowLastCharSpecial"\:"true",\n         "ADComplexity"\:"false",\n         "RegExNoMatch"\:"",\n         "AllowSpecial"\:"true",\n         "MaximumSpecial"\:"0",\n         "MinimumLowerCase"\:"0",\n         "MinimumUnique"\:"0",\n         "MinimumNumeric"\:"1",\n         "MinimumLength"\:"8",\n         "DisallowedValues"\:"test\\npassword",\n         "CaseSensitive"\:"true",\n         "RegExMatch"\:"",\n         "DisallowCurrent"\:"false",\n         "AllowFirstCharSpecial"\:"true",\n         "MinimumLifetime"\:"0",\n         "ExpirationInterval"\:"2592000",\n         "UniqueRequired"\:"false",\n         "MaximumSequentialRepeat"\:"0",\n         "AllowNumeric"\:"true",\n         "AllowFirstCharNumeric"\:"true",\n         "EnableWordlist"\:"true",\n         "MaximumLength"\:"12",\n         "DisallowedAttributes"\:"sn\\ncn\\ngivenName",\n         "AllowLastCharNumeric"\:"true",\n         "PolicyEnabled"\:"true",\n         "MaximumUpperCase"\:"0",\n         "MinimumUpperCase"\:"0",\n         "ChangeMessage"\:"Please change your password to meet the corporate policy",\n         "MaximumLowerCase"\:"0"\n      },\n      "passwordRules"\:[\n         "Password is case sensitive.",\n         "Must be at least 8 characters long.",\n         "Must be no more than 12 characters long.",\n         "Must include at least 1 number.",\n         "Must not include any of the following values\:  test password",\n         "Must not include part of your name or username.",\n         "Must not include a common word or commonly used sequence of characters."\n      ]\n   }\n}\n</pre>The web service must then respond with a body that includes a true/false status for an error state, as well as an errorMessage value to display to the user.\n<pre style\="overflow\: auto; max-height\:200px; border\: 1px black">\n{\n    "error"\: true,\n    "errorMessage"\:"password check output - from rest api"\n}\n</pre>
Setting_Description_external.remoteResponses.url=<p>This RESTful client API is provided to allow a remote service to provide challenge/response validation during forgotten password.</p>\n\n<p>When the setting <code>@PwmSettingReference:recovery.verificationMethods@</code> is configured to use Remote Responses, the url configured here will be invoked.  The request will include user information and a verification session identifier.  The remote service is responsible for returning instructions to the user, an error message and a list of prompts to present to the user and the status of the verification process.</p>\n\nHTTP Request POST JSON Body example:\n\n<pre style\="overflow\: auto; max-height\:200px; border\: 1px black">\n{\n   "responseSessionID":"65634ab0-0112-41a1-93b1-e9e8178bbc29",\n   "userInfo":{\n      "userDN":"cn=testuser,ou=users,o=data",\n      "ldapProfile":"default",\n      "userID":"testuser",\n      "userEmailAddress":"testuser@example.com",\n      "passwordExpirationTime":"2000-01-01T01:01:01Z",\n      "passwordLastModifiedTime":"2000-01-01T01:01:01Z",\n      "requiresNewPassword":false,\n      "requiresResponseConfig":false,\n      "requiresUpdateProfile":false,\n      "requiresInteraction":false,\n      "passwordStatus":{\n         "expired":false,\n         "preExpired":false,\n         "violatesPolicy":false,\n         "warnPeriod":false\n      },\n      "passwordPolicy":{\n         "MinimumNumeric":"0",\n         "AllowNumeric":"TRUE",\n         "MaximumSpecial":"0",\n         "AllowLastCharSpecial":"TRUE",\n         "MinimumLength":"5",\n         "AllowFirstCharNumeric":"TRUE",\n         "MaximumUpperCase":"0",\n         "MinimumLowerCase":"0",\n         "UniqueRequired":"FALSE",\n         "PolicyEnabled":"true",\n         "ADComplexityMaxViolations":"2",\n         "MaximumLength":"12",\n         "DisallowedValues":"",\n         "MinimumUnique":"0",\n         "MinimumLifetime":"0",\n         "CaseSensitive":"TRUE",\n         "AllowLastCharNumeric":"TRUE",\n         "ExpirationInterval":"2592000",\n         "AllowFirstCharSpecial":"TRUE",\n         "MinimumSpecial":"0",\n         "MaximumSequentialRepeat":"0",\n         "MinimumUpperCase":"0",\n         "DisallowedAttributes":"",\n         "MaximumLowerCase":"0",\n         "ChangeMessage":"Please change your password to meet the corporate policy",\n         "MaximumNumeric":"0",\n         "AllowSpecial":"TRUE"\n      },\n      "passwordRules":[\n         "Password is case sensitive.",\n         "Must be at least 5 characters long.",\n         "Must be no more than 12 characters long."\n      ]\n   },\n   "userResponses":{ \n      "identifier1":"user answer value"\n   }\n}\n</pre>\nHTTP Response JSON body example:<pre style\="overflow\: auto; max-height\:200px; border\: 1px black">\n{\n   "displayInstructions":"please enter the data for the requested prompts",\n   "verificationState":"INPROGRESS",\n   "userPrompts":[\n      {\n         "displayPrompt":"User Prompt #1",\n         "identifier":"identifier1"\n      }\n      {\n         "displayPrompt":"User Prompt #2",\n         "identifier":"identifier2"\n      }\n   ],\n   "errorMessage":"error message"\n}</pre>\n<p>Permitted values for <code>verificationState</code> are INPROGRESS, FAILED and COMPLETE.</p>
Setting_Description_external.webservices.enable=Allow public use of web services.  When false, the form nonce is required for all web services.  The form nonce is difficult (though not impossible) for a client to retreive programmatically.  Therefore it is difficult, though not impossible to use the web services.  When true, the form nonce is not required to invoke the web services.
Setting_Description_forceBasicAuth=If false, then the form page will be presented for un-authenticated users, however if a basic auth header is present it will always be used.
Setting_Description_forgottenUsername.enable=Enable forgotten username registration
Setting_Description_forgottenUsername.form=Field(s) to be used for search for the username.
Setting_Description_forgottenUsername.searchFilter=LDAP search filter used to search for users during forgotten username recovery. &nbsp;The LDAP search filter should include each attribute in the <i>Forgotten Username Form</i>.  Tokens made of a form item name (such as <code>cn</code>) enclosed with a percent sign <code>%cn%</code> will be replaced with values supplied by the user.<br><br>For example, if the <i>Forgotten Username Form</i> included the attributes <code>cn</code> and <code>sn</code>, then this filter may be appropriate\:<br><br><code>(&amp;(objectClass\=person)(cn\=%cn%)(sn\=%sn%))</code><br><br>If this setting is left blank, a search filter based on the required items in the <i>Forgotten Username Form</i> will be automatically generated at the time of the search.
Setting_Description_forgottenUsername.sendUsername.sendMethod=Method to send username to user.  In the contents of the message you can use the a macro as appropriate.</i>
Setting_Description_forgottenUsername.message=Message to show user upon successful forgotten username action.
Setting_Description_guest.adminAttribute=Attribute in which the DN of the logged in user will be written to in ldap when a guest user is created. This attribute will be written to the user object just after creating the object.
Setting_Description_guest.adminGroup=Query string used to detect if a user is a guest administrator. An LDAP query is performed during login against the logged in user to determine if the user is a guest administrator. If the user matches the query, then the user is considered a guest administrator.
Setting_Description_guest.createContext=LDAP context for new guest accounts to be created in.
Setting_Description_guest.editOriginalAdminOnly=When set to true, only the guest administrator who created the guest account will be allowed to update the guest account details.
Setting_Description_guest.enable=Enable guest registration
Setting_Description_guest.expirationAttribute=The attribute used to store the account expiration date.  If this value is blank, the guest administrator is not prompted for an expiration date and no expiration date is recorded on the user.
Setting_Description_guest.form=New Guest form creation attributes/fields.
Setting_Description_guest.maxValidDays=The maximum number of days before the account will be disabled.   The guest administrator may use a calendar widget to select an expiration date, which must be within the account validity window.  If this value is zero, the guest administrator is not prompted for an expiration date and no expiration date is recorded on the user.
Setting_Description_guest.update.form=New Guest form creation attributes/fields.
Setting_Description_guest.writeAttributes=Actions to be performed after a guest user is created.  Macros may be used.
Setting_Description_helpdesk.actions=Actions available to the helpdesk actor.  Macros may be used.
Setting_Description_helpdesk.clearOtp.button=Allow the helpdesk operator to clear out a user's stored one time password settings by clicking a button.
Setting_Description_helpdesk.clearResponses=Allow the helpdesk operator to clear out a user's stored responses after changing the user's password.
Setting_Description_helpdesk.clearResponses.button=Allow the helpdesk operator to clear out a user's stored responses by clicking a button.
Setting_Description_helpdesk.deleteUser.button=Allow the helpdesk operator to delete the user.
Setting_Description_helpdesk.detail.form=Field(s) to be shown during the detail view of of an individual.
Setting_Description_helpdesk.displayName=The display name used to identify the user on the user detail screen.  Macros are resolved to the displayed user.
Setting_Description_helpdesk.enable=Enable the helpdesk module.
Setting_Description_helpdesk.enableUnlock=Enable helpdesk module users to unlock an (intruder) locked account.
Setting_Description_helpdesk.enforcePasswordPolicy=Require that passwords set by helpdesk must meet the same password policy as the user would normally be constrained by.
Setting_Description_helpdesk.filter=LDAP search filter to query the directory with.  Substitute <i>%USERNAME%</i> for user supplied username.  If not specified, a search filter will be auto calculated based on the Helpdesk Search Form.<p>Examples<ul><li>Edirectory\: <code>(&(objectClass\=Person)(|((cn\=*%USERNAME%*)(uid\=*%USERNAME%*)(givenName\=*%USERNAME%*)(sn\=*%USERNAME%*))))</code></li><li>Active Directory\: <code>(&(objectClass\=Person)(|((cn\=*%USERNAME%*)(uid\=*%USERNAME%*)(sAMAccountName\=*%USERNAME%*)(userprincipalname\=*%USERNAME%*)(givenName\=*%USERNAME%*)(sn\=*%USERNAME%*))))</code></li></ul>
Setting_Description_helpdesk.forcePwExpiration=
Setting_Description_helpdesk.idleTimeout=Number of seconds after which an authenticated session becomes unauthenticated.   Session Idle timeout will be set to this value once a user successfully access the helpdesk module.
Setting_Description_helpdesk.otp.verify=Enable OTP Verification.
Setting_Description_helpdesk.profile.list=List of LDAP Helpdesk profiles.  In most cases, only a single profile is needed.  Only define multiple profiles if different helpdesk users will need different features/permissions.  Each helpdesk profile has a <i>Helpdesk Profile Match</i> setting used to define to whom the profile applies.  If multiple profiles could apply for a user, the first profile in the list defined here will be assigned.
Setting_Description_helpdesk.queryMatch=This setting is used to define the set of users for which this policy applies.
Setting_Description_helpdesk.result.form=Field(s) to be shown as a result to searches.
Setting_Description_helpdesk.result.limit=result limit
Setting_Description_helpdesk.searchBase=If empty, the default ldap search base(s) will be used.
Setting_Description_helpdesk.search.filters=.
Setting_Description_helpdesk.sendPassword=If set to true, send the password to the user using the method selected under <code>@PwmSettingReference\:recovery.sendNewPassword.sendMethod@</code>
Setting_Description_helpdesk.setPassword.maskValue=When entering the password for a user, should the value be masked by default.
Setting_Description_helpdesk.setPassword.mode=Mode to allow helpdesk administrators to set passwords.  (Note the logged-in user must have proper ldap permissions.)
Setting_Description_helpdesk.setPassword.writeAttributes=Actions to execute after a helpdesk actor modifies the user's password.  Macros may be used.
Setting_Description_helpdesk.token.sendMethod=Set the method(s) used for sending the token code to the user.
Setting_Description_helpdesk.useProxy=Use the application proxy connection for all actions initiated in the helpdesk module.  When disabled, actions are initiated using the logged in user's ldap connection, requiring that the user have appropriate privileges in the ldap directory.
Setting_Description_helpdesk.verificationMethods=Helpdesk Verifications
Setting_Description_helpdesk.viewStatusValues=
Setting_Description_http.proxy.url=The url of the HTTP proxy server.  If blank, no proxy server will be used.<ul><li>For http proxy server, use "<i>http\://serverame\:3128</i>" format</li><li>For authenticated proxy server, use the "<i>http\://username\:password@servername\:3128</i>" format</ul></li><br/>
Setting_Description_idleTimeoutSeconds=Number of seconds after which an authenticated session becomes unauthenticated.
Setting_Description_interface.theme=\n            Change the look and feel by selecting a theme. The included themes are provided primarily as inspiration to those wishing to make customizations.<br/><br/>\n                If <code>Embedded</code> is selected, the follow settings will be used to contain the contents of the default css theme\:\n                <ul>\n                    <li><a data-gotoSettingLink\="display.css.customStyle">@PwmSettingReference\:display.css.customStyle@</a></li>\n                    <li><a data-gotoSettingLink\="display.css.customMobileStyle">@PwmSettingReference\:display.css.customMobileStyle@</a></li>\n                </ul>\n                If <code>Custom</code> is selected, the contents of the default css theme will be served from the locations referenced in the settings\n                <ul>\n                    <li><a data-gotoSettingLink\="display.css.customStyleLocation">@PwmSettingReference\:display.css.customStyleLocation@</a></li>\n                    <li><a data-gotoSettingLink\="display.css.customMobileStyleLocation">@PwmSettingReference\:display.css.customMobileStyleLocation@</a></li>\n                </ul>\n
Setting_Description_intruder.address.checkTime=The maximum time period between each intruder attempt.  When this time period is exceeded, the intruder attempt count will be reset to zero.  A value of zero disables the address lockout functionality.
Setting_Description_intruder.address.maxAttempts=The maximum number of attempts any user may make within a particular address.  Once this value is exceeded, no user from that address will be able to perform any activities until the reset time interval has passed.  A value of zero disables the address lockout functionality.
Setting_Description_intruder.address.resetTime=This setting defines the time period after which a bad attempt will be cleared from the lockout table.  The address lockout table is marked for any source ip address anytime any user has a failed attempt to authenticate, recover a password, or activate a user account from that address.<br/><br/>Depending on how the application is deployed it may not be able to correctly identify the IP address of the user.<br/><br/>Value is in number of seconds.  A value of zero disables the address lockout functionality.
Setting_Description_intruder.attribute.checkTime=The maximum time period between each intruder attempt.  When this time period is exceeded, the intruder attempt count will be reset to zero.
Setting_Description_intruder.attribute.maxAttempts=The maximum number of attempts a user may make before a lockout occurs.  Once this value is exceeded, the user will not be able to perform any activities until the reset time interval has passed.   A value of zero disables the user lockout functionality.
Setting_Description_intruder.attribute.resetTime=This setting defines the time period after which a bad attempt will be cleared from the lockout table.  The attribute lockout table is marked for a user anytime a non-authenticated user has enter a form field.  <br/><br/>Value is in number of seconds.  A value of zero disables the attribute lockout functionality.
Setting_Description_intruder.enable=Enable the application level intruder detection system.  Your LDAP directory intruder detection settings will function independently of this setting.
Setting_Description_intruder.session.maxAttempts=The maximum amount of intruder attempts per session.  When this limit is exceeded, the session will be "locked", and no other requests using that session will succeed.  A value of zero disables the session lockout functionality.
Setting_Description_intruder.storageMethod=Data store used for Intruder Records.  If <i>Database</i> is used, all application instances will share a common view of intruder status.  If <i>LocalDB</i> is used, each instance has it's own intruder state.  LocalDB is likely to have less performance overhead and having a consistent intruder state across all application instances may not be important.  Auto Configure will use a database if configured, if not the LocalDB will be used.
Setting_Description_intruder.tokenDest.checkTime=The maximum time period between each intruder attempt.  When this time period is exceeded, the intruder attempt count will be reset to zero.
Setting_Description_intruder.tokenDest.maxAttempts=The maximum number of attempts a user may make before a lockout occurs.  Once this value is exceeded, the user will not be able to perform any activities until the reset time interval has passed.   A value of zero disables the user lockout functionality.
Setting_Description_intruder.tokenDest.resetTime=This setting defines the time period after which a bad attempt will be cleared from the lockout table.  The attribute lockout table is marked for a user anytime a token is sent, and it is cleared when a token is consumed.  <br/><br/>Value is in number of seconds.  A value of zero disables the attribute lockout functionality.
Setting_Description_intruder.user.checkTime=The maximum time period between each intruder attempt.  When this time period is exceeded, the intruder attempt count will be reset to zero.
Setting_Description_intruder.user.maxAttempts=The maximum number of attempts a user may make before a lockout occurs.  Once this value is exceeded, the user will not be able to perform any activities until the reset time interval has passed.   A value of zero disables the user lockout functionality.
Setting_Description_intruder.user.resetTime=This setting defines the time period after which a bad attempt will be cleared from the lockout table.  The user lockout table is marked for a user anytime a user has a failed attempt to authenticate, recover a password, or activate a user account. <br/><br/>Value is in number of seconds.  A value of zero disables the user lockout functionality.
Setting_Description_knownLocales=List of locales available.  The code is in two parts separated by two colons (<code>\:\:</code>).  The first part is the browser locale code, the second field is the iso country code used for the flag value.
Setting_Description_ldap.ad.allowAuth.expired=Active Directory will fail an ldap login attempt when the current date is after the user's password expiration date.  If this option is enabled, the system will allow login even though the ldap bind has failed.  The user will only be able to set a new password when this condition occurs.  No other functions will be available until the password has been set (and this flag is cleared).
Setting_Description_ldap.ad.allowAuth.requireNewPassword=Active Directory will fail an ldap login attempt when the user's "must change password on next login" flag is set.  If this option is enabled, the system will allow login even though the ldap bind has failed.  The user will only be able to set a new password when this condition occurs.  No other functions will be available until the password has been set (and this flag is cleared).
Setting_Description_ldap.addObjectClasses=Object classes to automatically add to users who authenticate to the password servlet.  Typically this is an auxillary ldap class that contains attributes used by to store password self service data.
Setting_Description_ldap.ad.enforcePwHistoryOnSet=Enforce password policy during forgotten password when <i>Use Proxy When Password Forgotten</i> is also set to true.  This setting requires that the AD servers be at <b>Windows 2008 Server R2 SP1 or later</b>.  More specifically, it requires that the AD servers support the LDAP_SERVER_POLICY_HINTS_OID (1.2.840.113556.1.4.2066) LDAP modification control.
Setting_Description_ldap.ad.proxyForgotten=If true, when the user's password is forgotten, the system will use the ldap proxy account for ldap work.  This is because an ldap connection is not possible to AD without the user's password.  When authenticated in this condition, the user will be forced to change password immediately.
Setting_Description_ldap.defaultObjectClasses=Object class(es) of user entries in your LDAP directory.
Setting_Description_ldap.duplicateMode=Control how the application will handle the situation when multiple user matches are found for a search, such as during authentication.
Setting_Description_ldap.edirectory.cr.applyWordlist=Prohibit answers in the wordlist dictionary from being used in answers when saving challenge/response answers.
Setting_Description_ldap.edirectory.cr.maxQuestionCharsInAnswer=Specify the maximum number of characters of the question text to be permitted in answers when saving challenge/response answers.
Setting_Description_ldap.edirectory.cr.minRandomDuringSetup=Set the number of random questions required to be completed at the time of saving of challenge/response answers.
Setting_Description_ldap.edirectory.enableNmas=When connecting to a NetIQ eDirectory LDAP directory, this parameter will control if NMAS extensions will be used when connecting to the ldap directory.  Enabling nmas results in\:<ul><li>better error messages when using universal password policies</li><li>better error handling during certain change password scenarios</li></ul>Unless you are using an older version of eDirectory (pre 8.8 or before), it is generally best to set this to true.<br/><br/>All NMAS operations require an SSL connection to the directory.
Setting_Description_ldap.edirectory.readChallengeSets=If enabled, the challenge set configuration from eDirectory Universal Password policy will be read and applied to users.  If an eDirectory challenge set is applied to the user, that policy will be used, otherwise the policy that is a part of this configuration will be used.  To require only NMAS configured challenge sets, be sure to blank out the required and forgotten questions as part of this configuration, or else those will be used in cases where no eDirectory policy are defined.
Setting_Description_ldap.edirectory.readUserPwd=If true, the user's password will be read from eDirectory before changing it.  This prevents an extra password change from being set to a temporary random password during forgotten password sequence.  If the proxy user does not have rights to read the password, then a temporary random password will be generated for the user anyway.
Setting_Description_ldap.edirectory.storeNmasResponses=If true, user responses will be saved to the NMAS response storage container on the user.  This storage is in addition to any other configured response storage methods.
Setting_Description_ldap.edirectory.useNmasResponses=If true, NMAS stored responses will be used for forgotten password recovery.  All other configured storage methods will be tried before the NMAS stored responses will be evaluated.
Setting_Description_ldap.edirectory.ws.pwdMgtURL=If supplied, this setting will change the behavior of the forgotten password function. Instead of using the normal mechanism to read the responses stored in ldap, the NetIQ UserApp forgotten password web service will be used to discover the user's stored questions and test the user's responses.  If the forgotten password web service indicates success, then the user will be forwared to the change password screen which operates through LDAP.  The web services's "processChgPwd" method will not be used and instead the user's new password will be set via ldap.<br/><br/><i>Example\:</i> https\://10.1.1.1\:8443/IDM/pwdmgt/service<br/><br/><b>Note\:</b> A secure (https) URL should be used for security reasons.  You may need to import the HTTPS certificate into the java keystore.<br/><b>Note\:</b> The UserApp Password SOAP service only exists in NetIQ UserApp v3.7 or greater.
Setting_Description_ldap.followReferrals=Follow LDAP Referrals
Setting_Description_ldap.group.label.attribute=Display value for group entries.  Can include LDAP macros; LDAP macros will resolve to the group entry object.
Setting_Description_ldap.guidAttribute=This attribute is used to identity and reference unique users in the LDAP directory.  If set to the default value of <i>VENDORGUID</i>, the system will attempt to read the vendor specific ldap GUID.  Alternatively, you can set any string readable attribute as the GUID as long as the directory can be trusted to enforce the uniqueness.  Lastly, you can use a custom attribute, and configure the "Auto Add GUID Value" option to true.  The application defined schema includes the attribute <code>pwmGUID</code> for this usage.
Setting_Description_ldap.guid.autoAddValue=If true, A unique GUID value will be created and assigned for any user attempting to authenticate that does not have a value.  The value will be written to the attribute named in the LDAP GUID Attribute setting.
Setting_Description_ldap.idleTimeout=Amount of seconds the LDAP connection for a given session can remain idle before closing. If zero, then an ldap connection will be maintained throughout the lifetime of the http session.
Setting_Description_ldap.ignoreUnreachableProfiles=When multiple LDAP profiles exist, ignore unreachable profiles.  A Directory Unavailable error will only be shown during a user search when there is only a single LDAP Profile configured or all LDAP Profiles are unreachable.
Setting_Description_ldap.namingAttribute=Attribute name used as the naming attribute on ldap user entries. This value is also the first part of the distinguished name of a user.  This name is constant depending on directory vendor type, even if a different attribute is used for the login search filter.  Typically the naming attribute is <i>cn</i> or <i>uid</i>.
Setting_Description_ldap.oracleDS.allowAuth.requireNewPassword=Oracle Directory Server will normally fail an ldap login attempt when the user's <i>pwdReset</i> attribute is set due to an administrator password set.  If this option is enabled, the system will allow login even though the ldap bind has failed.  The user will only be able to set a new password when this condition occurs.  No other functions will be available until the password has been set (and this flag is cleared).
Setting_Description_ldap.oracleDS.enable.manipAllowChangeTime=If enabled, during the forgotten password recovery sequence, allow manipulation of the allowPasswordChangeTime attribute.  This allows forgotten password functionality with expected behavior when a policy of minimum time between password changes is enforced.
Setting_Description_ldap.profile.displayName=Display name used for this LDAP Profile.
Setting_Description_ldap.profile.enabled=Indicate if this ldap profile should be in use.  For maintenance reasons, it may be helpful to remove an LDAP Profile from use instead of deleting the profile's configuration entirely.
Setting_Description_ldap.profile.list=List of LDAP profiles.  Each ldap profile should define a unique LDAP data environment.  Depending on the directory type and configuration, this could mean a unique domain, forest, tree or possibly server.  Each profile can have multiple redundant servers defined, however those servers should share the same data.<br/><br/>Be careful when renaming or removing values in this list, if a profile name is removed or renamed the associated settings will be removed as well.<br/><br/>During authentication, each profile will be searched in the order listed here.
Setting_Description_ldap.proxy.password=The corresponding password of LDAP Proxy User user.
Setting_Description_ldap.proxy.username=LDAP Proxy User used to access the ldap directory. This user must have rights to browse users, and manage password attributes on the user object.<br/><br/>This value should be in LDAP distinguished name format, even if your ldap directory accepts other types of values for the bind DN.  An example of this format is <i>cn\=admin,o\=example</i> or <i>cn\=administrator,cn\=users,dc\=subdomain,dc\=domain,dc\=net</i>.<br/><br/>Generally, the proxy user needs read/browse object rights to all user objects it will manage, as well as create object rights in the new user container (if enabled).
Setting_Description_ldap.rootContexts=Base context to search for usernames during authentication and other operations.  Each context will be searched in order until a single match is found.  If multiple matches are found in a single context, a match will be considered not found.  Because each search is executed serially, avoid large numbers of contexts to improve search performance.
Setting_Description_ldap.search.timeoutSeconds=Maximum amount of seconds to wait for an LDAP search to complete.
Setting_Description_ldap.selectableContextMode=Control if the ldap context or profile is shown to the user as an option during user identification (login, forgotten password, etc).
Setting_Description_ldap.selectableContexts=This optional setting, if configured, will add another field to the form-based login screen and other user search screens.  The field will allow the user to select a specific context. This is for situations where the ldap directory that does not have unique usernames throughout the entire directory. <br/><br/>Values can further be set with both a display value and a context, separated by three colons.<br/><br/>For example\:<p><b>ou\=sf,ou\=ca,o\=example\:\:\:San Francisco</b><br/<b>ou\=lon,ou\=uk,o\=example\:\:\:London</b><br/<b>ou\=nyc,ou\=ny,o\=example\:\:\:New York</b><br/</p>
Setting_Description_ldap.serverCerts=LDAP Server Certificates.  These certificates have are stored in the configuration file and used to validate the identity of your LDAP server.
Setting_Description_ldap.serverUrls=List of ldap servers in URL format.  Each of these these servers will be used in a fail-over configuration.  The servers are used in order of appearance in this list.  If the first server is unavailable the next available server in the list will be used.  The first server will periodically be checked to see if it has become available.<ul><li>For secure SSL, use the "<i>ldaps\://servername\:636</i>" format</li><li>For plain-text servers, use "<i>ldap\://serverame\:389</i>" format (not recommended)</li></ul><p>When using secure connections, the Java virtual machine must trust the directory server, either because you have manually added the public key certificate from the tree to the Java keystore or the certificate is imported into the setting <i>LDAP Server Certificates</i>.<ul><li>Do not use a non-secure connection for anything but the most basic testing purposes (Many LDAP servers will reject password operations on non-secure connections)</li><li>Do not use a load-balancing device for LDAP high availability, instead use the built in LDAP server fail-over functionality</li><li>Do not use a DNS round-robin address</li><li>Avoid using the network address, use the proper fully-qualified domain name address for the server</li></ul>
Setting_Description_ldap.testuser.username=The LDAP test user is used to test functionality and access to the ldap directory. This user should be configured similar to a normal user account with normal access privileges. This account will periodically be used to perform a health check, including changing the password of the account. <br/><br/><b>Using a test user account will greatly increase the ability to detect and alert configuration and health issues.</b><br/><br/>The following functionality (if enabled) will be tested using the test user account.<ul><li>Authentication</li><li>Password policy reading</li><li>Set password</li><li>Set challenge/responses</li><li>Load challenge/responses</li></ul>
Setting_Description_ldap.user.group.attribute=Attribute on user entry that references group entries.  The value of this attribute in the directory must be a LDAP DN.
Setting_Description_ldap.username.attr=If blank, the LDAP Naming Attribute will be used.  This option allows fields that display or store the <i>Username</i> or <i>UserID</i> of a user to show something other then the LDAP Naming Attribute if appropriate.  It is desirable that this value be unique for this system.
Setting_Description_ldap.usernameSearchFilter=Used to for contextless login and other functions to find users in ldap using usernames.  The value <i>%USERNAME%</i> is replaced with the actual username value.
Setting_Description_ldap.wireTrace.enable=If true, all ldap traffic will be output to the TRACE logging level.<br/><br/><b>WARNING\:</b> enabling this option may allow user passwords and other sensitive data to be written to the log files.
Setting_Description_locale.cookie.age=Duration of time to remember a user's locale preferences.  Anytime a browser's default locale setting is overridden, a cookie will be stored in the browser remembering that setting for the duration of this setting.
Setting_Description_logoutAfterPasswordChange=Force user to logout (and be sent to logoutURL) after a password change.<br/><br/>In most cases, this should be left on (default), especially if using some type of single sign on service.
Setting_Description_naaf.requiredMethods=Required NAAF Login Methods.  Each method selected will be required to be competed by users during the NAAF forgotten password verification sequence.  The user must have previously completed any enrollment required for the method to be used successfully.
Setting_Description_naaf.userIdentifier=User identifier to present to the NAAF web service.  NAAF identifiers are typically in the format of <code>repository\\username</code>.  User macros can be used for this setting.<br/><br/>For example, using a value of <code>IDV\\@&zwnj;LDAP\:cn@</code> would present the username using the <code>cn</code> attribute to login to a NAAF repository named <i>IDV</i>.
Setting_Description_naaf.ws.serverCerts=Certificate for the NAAF web service server.
Setting_Description_naaf.ws.url=The URL for the NAAF appliance REST web service.  Version 1 (v1) of the NAAF REST webservice is required.<br/><br/>Examples:<ul><li>https://naaf.example.com/api/v1</li><li>https://172.17.2.2/api/v1</li></ul>
Setting_Description_network.allowMultiIPSession=If true, Allow a single HTTP session to be accessed from different source IP addresses.  Some load balancing/proxy network infrastructures may require this, but in most cases it should be disabled.  Especially since typical sessions are very short, there is generally not a practical reason for a user to access the same session from multiple client addresses.
Setting_Description_network.ip.permittedRange=If specified, only connections originating from the specified IP address ranges will be permitted.  If blank (default), any source address is permitted.<p>Supported range specifications are\:<p><ul><li>Full IPv4 address, e.g. <b>12.34.56.78</b></li><li>Full IPv6 address, e.g. <b>2001\:18e8\:3\:171\:218\:8bff\:fe2a\:56a4</b></li><li>Partial IPv4 address, e.g. <b>12.34</b> (which matches any IP starting <b>12.34</b></li><li>IPv4 network/netmask, e.g. <b>18.25.0.0/255.255.0.0</b></li><li>IPv4 or IPv6 CIDR slash notation, e.g. <b>18.25.0.0/16</b> or <b>2001\:18e8\:3\:171\:\:/64</b></li></ul>
Setting_Description_network.requiredHttpHeaders=<p>Required HTTP header name and value pairs.  If specified, any HTTP request sent to the server must have these headers to be honored.  This feature is useful if you have a security gateway and wish to only allow sessions from the gateway.</p><p>The settings must be in "name\=value" format.</p>
Setting_Description_network.reverseDNS.enable=If true, the system's reverse DNS system is used to record the hostname of the client.  In some cases this can cause performance issues so it can be disabled if it is not required.
Setting_Description_newUser.createContext=LDAP context for new users to be created in.  Macros are permitted in this setting.  The Default LDAP profile will always be used for new user creation.
Setting_Description_newUser.deleteOnFail=If the new user account creation fails for some reason, delete the (potentially partially-created) "broken" account in ldap.
Setting_Description_newUser.email.verification=If true, an email will be sent to the new user's email address before the account is created.  The NewUser must verify receipt of the email before the account will be created.
Setting_Description_newUser.enable=Enable new user registration
Setting_Description_newUser.form=<p>New User form creation attributes/fields.
Setting_Description_newUser.minimumWaitTime=During a new user creation, the user will be delayed for at least this amount of time before forwarding the user to the next activity.  <br/><br/>Value is specified in seconds.
Setting_Description_newUser.passwordPolicy.user=User to use as template for password policy.  The user specified here will be used as a 'template' for the new user password policy.  If the value is <i>TESTUSER</i>, the configured test user's password policy will be used.
Setting_Description_newUser.profile.displayName=The publicly viewable display name of this profile.
Setting_Description_newUser.profile.list=List of New User profiles.  When multiple new user profiles are configured, the user will be able to select which profile to complete.  The value of the setting <code>@PwmSettingReference\:newUser.profile.displayName@</code> will be shown as the profile name to users.
Setting_Description_newUser.sms.verification=If true, an SMS will be sent to the new user's mobile phone number before the account is created.  The NewUser must verify receipt of the SMS before the account will be created.
Setting_Description_newUser.username.definition=\n        <p>This setting controls the entry id of the newly created LDAP entry.  In some directories this is often used\n        as the "username", though many directories separate the concepts and values of entry ID and username.</p>\n        <p>Values can (and usually do) include macros.  In case the first value\n        is already existing in the directory, each successive value is tried until a free value is found.  Though the user\n        is not yet created when the macros are evaluated, LDAP macros will use the data provided on the new user form.  Other\n        macros may not be useful as there no data yet available on the user.</p>\n        <p>If blank, the username must be present in the form, defined as the LDAP naming attribute value.</p>\n
Setting_Description_notes.noteText=Configuration Notes
Setting_Description_newUser.writeAttributes=Actions to be taken when a user is created.  These actions will be executed just after creating the object.
Setting_Description_oauth.idserver.attributesUrl=Web service provided by the identity server to return attribute data about the user.
Setting_Description_oauth.idserver.clientName=OAuth client ID.  This value will be provided by the OAuth identity service provider.
Setting_Description_oauth.idserver.codeResolveUrl=OAuth Code Resolve Service URL.  This web service URL will be used to resolve the artifact returned by the OAuth identity server.
Setting_Description_oauth.idserver.dnAttributeName=Attribute to request from the OAuth server to be used as the username for local authentication.  This value will then be resolved the same as if the user had typed the password at the local authentication page.
Setting_Description_oauth.idserver.loginUrl=OAuth server login URL.  This is the URL to redirect the user to for authentication.
Setting_Description_oauth.idserver.secret=OAuth shared secret.  This value will be provided by the OAuth identity service provider.
Setting_Description_oauth.idserver.serverCerts=Certificate for the OAuth web service server.
Setting_Description_otp.enabled=Set to true to enable the configuration and use of one time password.
Setting_Description_otp.forceSetup=If true and one time passwords are enabled, the user will be directed to configure a one time password secret when logging in.  The user is forced to configure one time password if they do not have a current valid secret stored.
Setting_Description_otp.secret.allowSetup.queryMatch=Permission used to determine if a user is a permitted to setup an OTP secret.
Setting_Description_otp.secret.encrypt=If enabled, the Security Key is used to encrypt and decrypt token information, to make sure it is not readable as plain text.  Multiple application instances must use the same Security Key.  If the Security Key is changed, stored OTP passwords will no longer be usable.
Setting_Description_otp.secret.identifier=User Identifier.  Macros are available.
Setting_Description_otp.secret.ldap.attribute=LDAP attribute for storing the OTP secret.  This setting is used only when the storage method is set to LDAP.
Setting_Description_otp.secret.readPreference=Location to read the OTP secret from. If an option with multiple values are selected, each location will be read in turn until a stored response is found.
Setting_Description_otp.secret.recoveryCodes=Number of OTP recovery codes to supply to user.  Recovery codes can be used one time each to authenticate and are intended for occasions when the user looses access to their OTP device.  Set to zero to disable recovery codes.  Not all storage formats support recovery codes.
Setting_Description_otp.secret.storageFormat=Storage format used to save one time password secrets.\n<table style\="width\: 400px">\n<tr><td>Format</td><td>Description</td></tr>\n<tr><td>PWM JSON</td><td>Store the secret, descriptions and recovery codes in PWM native (json) format.</td></tr>\n<tr><td>Base32 secret</td><td>Store only the TOTP-secret as a base32 encoded string. This format does not support recovery codes or counter based tokens.</td></tr>\n<tr><td>OTP URL</td><td>Store the secret and description as an otpauth\:// url, used for generating the QR-code. This format does not support recovery codes.</td></tr>\n<tr><td>PAM text</td><td>Store the secret, description and recovery codes in the text file format, used by the Google Authenticator PAM module.</td></tr>\n</table>
Setting_Description_otp.secret.writePreference=Location to write the OTP secret to.  All storage methods will be written to when the user configures their response answers.
Setting_Description_password.allowChange.queryMatch=Permissions used to detect if a user is a permitted to change password.
Setting_Description_password.change.requireCurrent=If true, the user's current password will be required on the change password page for most change password scenarios.  In most cases this is not required because the user just authenticated prior to the seeing the change password page.  The major exception is when using SSO, in that case you will probably what to set "Only when not expired" so that the current password must be supplied when the user attempts a password change during a session, but not when forced to change immediately upon authentication.
Setting_Description_passwordLastUpdateAttribute=This attribute is used to mark when the password is updated, and is used during replication checks, and other processes.
Setting_Description_password.policy.ADComplexity=Enforce Microsoft Active Directory 2003 style password complexity rules\:<ul><li>Not contain the user's account name or parts of the user's full name that exceed two consecutive characters</li><li>Be at least six characters in length</li><li>Contain characters from three of the following four categories\:<ul><li>English uppercase characters (A through Z)</li><li>English lowercase characters (a through z)</li><li>Base 10 digits (0 through 9)</li><li>Non-alphabetic characters (for example, \!, $, \#, %)</li></ul></ul>
Setting_Description_password.policy.ADComplexityLevel=Choose the Microsoft Active Directory style password complexity rules. <p><code>AD 2003 Level Complexity\:</code></p> <ul> <li>Can not contain the user's account name or parts of the user's full name that exceed two consecutive characters</li> <li>Minimum 6 characters</li> <li>Maximum 128 characters</li> <li> Must contain characters from three of the following four categories\: <ul> <li>English uppercase characters (A through Z)</li> <li>English lowercase characters (a through z)</li> <li>Base 10 digits (0 through 9)</li> <li>Non-alphabetic characters (for example, \!, $, \#, %)</li> </ul> </li> </ul> <p><code>AD 2008 Level Complexity\:</code></p> <ul> <li>Can not contain the user's account name or parts of the user's full name that exceed two consecutive characters</li> <li>Minimum 6 characters</li> <li>Maximum 512 characters</li> <li> Must contain characters from several of the following categories. The exact number of categories is specified by the setting <a data-gotoSettingLink\="password.policy.ADComplexityMaxViolations">@PwmSettingReference\:password.policy.ADComplexityMaxViolations@</a>.<ul> <li>European language uppercase alphabetic characters</li> <li>European language lowercase alphabetic characters</li> <li>Base 10 digits (0 through 9)</li> <li>Non-alphabetic characters (for example, \!, $, \#, %)</li> <li>Other alphabetic characters not included in the other categories</li> </ul> </li> </ul>
Setting_Description_password.policy.ADComplexityMaxViolations=Maximum number of Active Directory 2008 Level Complexity category violations.  This setting has no effect unless the setting <a data-gotoSettingLink\="password.policy.ADComplexityLevel">@PwmSettingReference\:password.policy.ADComplexityLevel@</a> is set to <code>AD 2008 Level Complexity</code>.
Setting_Description_password.policy.allowFirstCharNumeric=Allow the first character of the password to be numeric.  Applies only if numeric characters are allowed.
Setting_Description_password.policy.allowFirstCharSpecial=Allow the first character of the password to be special.  Applies only if special characters are allowed.
Setting_Description_password.policy.allowLastCharNumeric=Allow the last character of the password to be numeric.  Applies only if numeric characters are allowed.
Setting_Description_password.policy.allowLastCharSpecial=Allow the last character of the password to be special.  Applies only if special characters are allowed.
Setting_Description_password.policy.allowNumeric=Allow numeric characters in password.
Setting_Description_password.policy.allowSpecial=Allow special (non alpha-numeric) characters in password.
Setting_Description_password.policy.caseSensitivity=Controls if the password is case sensitive.  In most cases, this can be read from the directory, but in some cases this value is not able to correctly read, so you may override it here.
Setting_Description_password.policy.changeMessage=Message to be displayed to user during password changes.  May include HTML markup.  This setting may be overwritten by a change password message read as part of an ldap password policy.
Setting_Description_password.policy.charGroup.minimumMatch=
Setting_Description_password.policy.charGroup.regExValues=
Setting_Description_password.policy.checkWordlist=Check the password against the configured Wordlist.
Setting_Description_password.policy.disallowCurrent=Prohibit current password from being used as new password.  Note that this can only be enforced if the login method permits the user's password to be known.
Setting_Description_password.policy.disallowedAttributes=A list of attributes not allowed to be used as passwords.  For a given user, the values will be read and will not be permitted to be used as part of the password value.  This check is case insensitive.  Note: specifying a number after the attribute name will restrict how many consecutive characters in the value are disallowed (i.e. "Language:4" means the password can't contain: "Engl", "ngli", "glis", or "lish", for English speaking users).
Setting_Description_password.policy.disallowedValues=A case insensitive list of values not allowed to be used as passwords.
Setting_Description_password.policy.maximumAlpha=Maximum amount of alphabetic characters required.  A value of zero disables this check.
Setting_Description_password.policy.maximumConsecutive=Maximum amount of characters in a sequence such as <i>0123456789</i> or <i>abcdefghijk</i>.  More specifically character sequence is defined by unicode character order of each character after the entire value is converted to lowercase.   A value of 0 disables this check.
Setting_Description_password.policy.maximumLength=Maximum length of password.  A value of zero disables this check.
Setting_Description_password.policy.maximumLowerCase=Maximum amount of lowercase characters required.  A value of zero disables this check.
Setting_Description_password.policy.maximumNonAlpha=Maximum amount of non-alphabetic characters required.  A value of zero disables this check.
Setting_Description_password.policy.maximumNumeric=Maximum amount of numeric characters required (if numeric allowed).  A value of zero disables this check.
Setting_Description_password.policy.maximumOldPasswordChars=Maximum amount of characters from the previous password allowed in the new password.  A value of zero disables this check.
Setting_Description_password.policy.maximumRepeat=Maximum times any character may be repeated throughout the password.  Case is ignored for this check. A value of zero disables this check.
Setting_Description_password.policy.maximumSequentialRepeat=Maximum times any character may be sequentially repeated throughout the password.Case is ignored for this check.  A value of zero disables this check.
Setting_Description_password.policy.maximumSpecial=Maximum amount of special characters required (if special allowed).  A value of zero disables this check.
Setting_Description_password.policy.maximumUpperCase=Maximum amount of uppercase characters required.  A value of zero disables this check.
Setting_Description_password.policy.minimumAlpha=Minimum amount of alphabetic characters required.  A value of zero disables this check.
Setting_Description_password.policy.minimumLength=Minimum length of password.   A value of zero disables this check.
Setting_Description_password.policy.minimumLifetime=Minimum amount of time that must pass between password changes.  Value is in seconds.  A value of zero disables this check.
Setting_Description_password.policy.minimumLowerCase=Minimum amount of lowercase characters required.  A value of zero disables this check.
Setting_Description_password.policy.minimumNonAlpha=Minimum amount of non-alphabetic characters required.  A value of zero disables this check.
Setting_Description_password.policy.minimumNumeric=Minimum amount of numeric characters required (if numeric allowed).  A value of zero disables this check.
Setting_Description_password.policy.minimumSpecial=Minimum amount of special characters required (if special allowed).  A value of zero disables this check.
Setting_Description_password.policy.minimumStrength=Password strengths are judged on a strength on a scale of 0 to 100 irrespective of other password policy settings.  This setting requires that the user have a password that meets the minimum strength level specified here, regardless of other password policy rules.   45 or better is considered "good" while 70 or better is considered "strong".  A value of 0 disables this check.
Setting_Description_password.policy.minimumUnique=Minimum amount of unique characters allowed.  A value of zero disables this check.
Setting_Description_password.policy.minimumUpperCase=Minimum amount of uppercase characters required.  A value of zero disables this check.
Setting_Description_password.policy.queryMatch=Settings here are used to determine if this password policy applies to a given user.  During login, if a previous policy has not yet been assigned to the user, the matches here are considered and if positive, the user will then be assigned this policy.
Setting_Description_password.policy.regExMatch=A Regular Expression pattern the password must match in order to be allowed.  Multiple patterns can be listed.  A pattern must match the <i>entire</i> password to be applied.  A partial match is ignored.  Macros can be used.
Setting_Description_password.policy.regExNoMatch=A Regular Expression pattern the password must <b>not</b> match in order to be allowed.  Multiple patterns can be listed.  A pattern must match the <i>entire</i> password to be applied.  A partial match is ignored.  Macros can be used.
Setting_Description_password.policy.ruleText=When blank, an automatically generated rule list will be displayed to the user. The automated rule list may not be inclusive of all settings in the password policy. Some of the more esoteric or difficult to communicate rules will not appear in the automatically generated list.  This is done in an attempt to not overwhelm the user with having to read and parse the rules before attempting to change the password.  Should the user type a password that conflicts with such a rule - the per-keystroke rule checker will provide direct feedback to the user on how to correct the problem.<br/><br/>If the automatically generated rule list is not desired, it can be overridden by setting a value here.  HTML tags are permitted.
Setting_Description_password.policy.source=This setting determines where password policy settings should be read from.  If <code>LDAP</code> is selected, an attempt to read the policy out of the ldap directory will be made, and many of the following settings could be ignored.  If <code>Local Config</code> is selected, the policy settings on this page are used, and any policy settings in the LDAP directory are ignored.  If <code>Merge</code> is selected, both policies are read, and where there is any conflict, The application will chose the most restrictive value of the policy.<br/><br/>The capability to read policy from LDAP is only available with some LDAP directory types.  <p>Additionally, the password policy used is only the "local" policy used by this application.  Upon a password set operation, the LDAP directory will typically enforce whatever policies are configured in the directory itself.
Setting_Description_password.profile.list=List of Password Policy Profiles.  When multiple password policy profiles are configured, all profiles are evaluated in order to check if the setting <code>@PwmSettingReference\:password.policy.queryMatch@</code> matches the user.
Setting_Description_password.require.form=Values required to be entered prior to password change.
Setting_Description_password.sharedHistory.age=The maximum age of the shared history storage.  Value is specified in seconds.  Default is 28 days.
Setting_Description_password.sharedHistory.enable=Enable a global shared password history for all users.  If enabled, all users will share a common password history.  This helps prevent common organizational words from being used as passwords by users.  Passwords are stored as a salted and encrypted hash in the LocalDB.
Setting_Description_password.showAutoGen=If set to true, a link will be displayed to users during the change password process to display a list of auto-generated sample passwords that are allowed by the configured password policies.  The user will have the option to select and use one of the values in the list.  If this option feature is enabled the user is not forced to choose a password from the list.
Setting_Description_password.showStrengthMeter=If true, the user will see the password strength meter on the change password screen.
Setting_Description_passwordSync.enableReplicaCheck=Check for the password to be updated on all configured replicas (for a user's LDAP Profile).  When enabled, replica sync checking will poll all of the configured replicas on the user's LDAP Profile to determine if the password change time has been updated.  The particular method to determine the last password change time varies per LDAP vendor type.
Setting_Description_passwordSyncMaxWaitTime=During a password change, the system will wait for the password to be synchronized to all configured LDAP servers.  In cases where the synchronization may take an extraordinary amount of time, this setting will prevent the page from timing out.<br/><br/>Value is specified in seconds.
Setting_Description_passwordSyncMinWaitTime=During a password change, a delay of this amount will be waited for before forwarding the user.  This gives any background synchronization processes time to execute before the user executes the next operation.<br/><br/>Value is specified in seconds.
Setting_Description_password.wordlist.wordSize=Minimum number of characters in the password that are checked against the wordlist dictionary. For example, if the password to be checked is "wordlist" and this setting is set to 6, then the combinations "wordli", "wordlis", "wordlist", "ordlis", "ordlist" and "rdlist" would all be checked against the configured dictionary. If any of these values are equal to any word in the wordlist dictionary, then the password is considered to match the wordlist and will be rejected. If this value is set to zero or the password to check is smaller then the value specified here, then the entire password is checked against the wordlist but not any smaller parts of it.
Setting_Description_peopleSearch.detail.form=Attributes to be shown during the detail view of of an individual person record.
Setting_Description_peopleSearch.displayName.cardLabels=Display labels for user panel in PeopleSearch detail and on org chart views.  LDAP Attribute value such as <code>@LDAP\:givenName@</code> macros can be used.  A maximum of four values can be set.
Setting_Description_peopleSearch.displayName.user=Display name for userDN type records.  Use macros to control the presentation such as the LDAP attribute macro <code>@LDAP\:givenName@</code>.
Setting_Description_peopleSearch.enable=Enable the PeopleSearch module.
Setting_Description_peopleSearch.enablePublic=
Setting_Description_peopleSearch.idleTimeout=Number of seconds after which an authenticated session becomes unauthenticated.   If the value is set to 0, then the application wide idle timeout value will be used.  If a user is using the PeopleSearch module without authenticating, then no timeout is applied.
Setting_Description_peopleSearch.maxCacheSeconds=When searches and record details are read from eDirectory, the results are cached within the application for a period of time.  Use this setting to control the maximum amount of time cached data can be used.  Setting to zero will disable the cache entirely, but may negatively impact the scability of the application and/or the LDAP directory.
Setting_Description_peopleSearch.orgChart.childAttribute=Attribute that contains the LDAP DN of the direct reports for a user.  If this setting is blank, the org chart view will not be shown.
Setting_Description_peopleSearch.orgChart.parentAttribute=Attribute that contains the LDAP DN of the manager.  If this setting is blank, the org chart view will not be shown.
Setting_Description_peopleSearch.photo.ldapAttribute=LDAP Attribute to use for photo.  Or blank, if no photo is to be displayed.
Setting_Description_peopleSearch.photo.queryFilter=Permission filter to control photo visibility when displaying an org chart or detail record view.  If a user does not match this permission, the user's photo will not be displayed.
Setting_Description_peopleSearch.photo.urlOverride=If user photos are not stored in LDAP, this setting can show photos from an external system.  If this setting is specified, the photo will not be loaded from the LDAP directory.<br/><br/>Example\:<code>http\://photos.example.com/employee/@LDAP\:workforceID@.jpg</code>
Setting_Description_peopleSearch.queryMatch=Define the users permitted to access the PeopleSearch module.
Setting_Description_peopleSearch.result.form=Attributes to be shown in the search results table during searches.
Setting_Description_peopleSearch.result.limit=Maximum number of records to return while searching.
Setting_Description_peopleSearch.searchAttributes=List of LDAP attributes to search the when generating an automatic search filter for the setting <a data-gotoSettingLink\="peopleSearch.searchFilter">@PwmSettingReference\:peopleSearch.searchFilter@</a>.  Also used to determine which fields in the user detail form will show the "Like" search option.
Setting_Description_peopleSearch.searchBase=If empty, the default ldap search base(s) will be used.
Setting_Description_peopleSearch.searchFilter=LDAP search filter to query the directory with.  Substitute <i>%USERNAME%</i> for user supplied username.  If blank, the search filter will be auto generated based on the values in the setting <a data-gotoSettingLink\="peopleSearch.searchAttributes">@PwmSettingReference\:peopleSearch.searchAttributes@</a>.\n        <br/><br>\n        Example\: <code>(&(objectClass\=Person)(|(givenName\=*%USERNAME%*)(sn\=*%USERNAME%*)(mail\=*%USERNAME%*)(telephoneNumber\=*%USERNAME%*)))</code>\n\n
Setting_Description_peopleSearch.useProxy=Use LDAP proxy account to perform searches.  For proper security in most environments this setting should <b>not</b> be enabled.
Setting_Description_pwmAdmin.queryMatch=Permissions used to determine if a user will be granted administrator rights.
Setting_Description_pwm.appProperty.overrides=Override application properties.  Do not use unless directed to by a support expert.
Setting_Description_pwmDb.location=Location of the LocalDB directory. If the specified path is relative, the path will be considered relative to the servlet's <i>WEB-INF</i> directory.
Setting_Description_pwm.forwardURL=After completing any activity which does not require a logout, the user will be forwarded to this url.<br/><br/>This setting can always be overridden for any given user session by adding a <i>forwardURL</i> parameter to any HTTP request.  If blank, the user will be forward to the application menu.
Setting_Description_pwm.homeURL=The URL to redirect user to upon clicking the home button.  If blank, the home button will return the user to the application context URL.
Setting_Description_pwmInstanceName=Name of this application instance.  If blank a persistent, randomly generated value will be used.  Recommended value is blank.
Setting_Description_pwm.logoutURL=URL to redirect user to upon logout.  If the site is being accessed through a web authentication gateway, the Logout URL should be set to the gateway's Logout URL. If you are using a gateway and do not include the proper logout URL here, then users will almost certainly get authentication errors, intruder lockouts and other problems.  If things are working properly then the user should see the gateway logout screen when logging out.<br/><br/>The Logout URL can be set to any desired relative or absolute URL.  At the time the user's browser requests this url, the local session will have already been invalidated.<br/><br/>This setting can always be overridden for any given user session by adding a <i>logoutURL</i> parameter to any HTTP request during the session.
Setting_Description_pwm.publishStats.enable=If true, the statistics of this application are periodically published statics to the project website.   The published statistics are\:<ul><li>Instance Name</li><li>Version/Build Information</li><li>Cumulative Statistics</li><li>Which settings are non default (but not the actual setting values</li></ul>Leaving this feature enabled helps developers know which features are used by administrators.
Setting_Description_pwm.publishStats.siteDescription=If Anonymous statistics publishing is enabled, this optional site description is published along with the otherwise anonymous statistics.  This can be an organization name, or other similar value.
Setting_Description_pwm.requireHTTPS=Require HTTPS (instead of cleartext HTTP) traffic to the application server.  While non-secure connections are useful during testing, production servers should always have this setting set to true.
Setting_Description_pwm.securityKey=<p>A Security Key used for cryptographic functions such as the token verification. A value is required if tokens are enabled for any of modules and a token storage method has been configured. This value is used similar to how the private key in a cryptographic security certificate is used.</p> <p>If configured, this value must be at least 32 characters in length.  The longer and more random this value, the more secure its use will be.  If multiple instances are in use, each instance should be configured with the same value.</p><p>Upon initial setup, a random security key is assigned to this value, it can be changed at any time, however any outstanding tokens or other material generated by an old security key will become invalid.</p>
Setting_Description_pwm.seedlist.location=When passwords are randomly generated, the system can generate "friendly" random password suggestions to users.  It does this by using a "seed" word or words, and then modifying that word randomly until it is sufficiently complex and meets the configured rules computed for the user.<br/><br/>Setting this to blank will result in suggested passwords being completely randomized.
Setting_Description_pwm.selfURL=The URL to this application, as seen by users.  The value is used in email macros and other user facing communications.  Example\: <b>http\://www.example.com/password</b>.  The site URL must use a valid fully qualified hostname.  Do not use a network address.
Setting_Description_pwm.versionCheck.enable=Allow periodically checks for new versions.  If a new version is detected, an item will be shown on the health check.
Setting_Description_pwm.wordlist.location=Specify a word list for dictionary checking to prevent users from using commonly used words as passwords.   Using wordists is an important part of password security.  Wordlists are used by intruders to guess common passwords.   The default wordlist included contains commonly used English passwords.  More comprehensive wordlists are available.  <br/><br/>The first time a startup occurs with a new wordlist setting, it will take some time to compile the wordlist into a database.  See the status screen/logs for progress information.  The wordlist file format is one or more text files containing a single word per line, enclosed in a ZIP file.  The String <i>\!\#comment\:</i> at the beginning of a line indicates a comment.  If a full path is not specified, the applications <i>WEB-INF</i> directory is assumed.
Setting_Description_recovery.action=Action to take when the user completes the forgotten password process.
Setting_Description_recovery.allowWhenLocked=Allow user to use the forgotten password feature when the account is intruder locked in LDAP.  This feature is not available when a user is using NMAS stored responses.
Setting_Description_recovery.enable=If enabled, forgotten password recovery will be available to users.
Setting_Description_recovery.form=Form fields for activate user module.  Each attribute will be required to be entered by the user.  Ideally, the user will be required to enter some personal data that is not publicly known.
Setting_Description_recovery.postActions=Actions to execute after a user has successfully completed the forgotten password sequence and the user's password has been modified.  Macros may be used.
Setting_Description_recovery.profile.list=A list of forgotten password policies.  This list is evaluated in the order shown here.  The first profile in the list to match on the setting <code>@PwmSettingReference\:recovery.queryMatch@</code> will be applied to a user.<br/><br/>Unless you need to define different forgotten password behavior for different users, you do not need to change this list from the default.
Setting_Description_recovery.queryMatch=This setting defines the set of users that this profile will be assigned to.
Setting_Description_recovery.require.otp=If enabled, a one time password will be required during the forgotten password process.  The user will be required to type the generated token in order to proceed to recover their password.  If this setting is disabled, then at least one other recovery method must be set to true for forgotten password recovery to operate.
Setting_Description_recovery.response.readPreference=Location to read the responses from. If an option with multiple values are selected, each location will be read in turn until a stored response is found.
Setting_Description_recovery.response.writePreference=<p>Location to write the responses to.  All storage methods will be written to when the user configures their response answers.</p><p><b>WARNING\: </b>The LocalDB should never be used to store responses in a production system as there are no methods to make the LocalDB storage redundant, nor are optimal backup methods available for the LocalDB.</p>
Setting_Description_recovery.searchFilter=LDAP search filter used to search for users during forgotten password recovery. &nbsp;The LDAP search filter should include each attribute in the <i>Forgotten Password User Search Form</i>.  Tokens made of a form item name (such as <code>cn</code>) enclosed with a percent sign <code>%cn%</code> will be replaced with values supplied by the user.<br><br>For example, if the <i>Activate User Form</i> included the attributes <code>cn</code> and <code>sn</code>, then this filter may be appropriate\:<br><br><code>(&amp;(objectClass\=person)(cn\=%cn%)(sn\=%sn%))</code><br><br>If this setting is left blank, a search filter based on the required items in the <i>Forgotten Password User Search Form</i> will be automatically generated.
Setting_Description_recovery.sendNewPassword.sendMethod=Method to send new password to user when the <i>Forgotten Password Success Action</i> is set to <i>Send new password</i>
Setting_Description_recovery.verificationMethods=Verification methods to be used during forgotten password.  The user must satisfy each option marked required.  The user can then select any of the remaining optional methods until the minimum number of optional methods have been completed.
Setting_Description_reporting.enable=Enable directory reporting.  When enabled, a local cache of user data will be maintained and will be made available to the administrator.  Enabling this option will require additional disk space and possibly Java heap memory, so it should be tested on a test server before enabling in a production environment.
Setting_Description_reporting.job.timeOffset=Number of seconds past midnight (GMT) when the update job is processed.  Setting to -1 will disable the nightly job processor.
Setting_Description_reporting.ldap.maxQuerySize=Maximum number of records read during a reporting query search.  Setting this value to larger sizes will require more Java heap memory.
Setting_Description_reporting.ldap.searchFilter=LDAP search filter to be used when running a reporting job.  If blank a filter based on the login query setting will be auto-generated.
Setting_Description_reporting.maxCacheAge=Maximum age of a cached report record before it is discarded.  Records older than this age will be periodically purged from the local report data cache.  This is done so that records that are deleted from the LDAP directory will eventually be removed from the report cache.  The default value of 2592000 seconds is equal to 30 days.<br/><br/>Value is specified in seconds.
Setting_Description_reporting.minCacheAge=Minimum cache age of a cached report record before it will be re-read by the application.  For example, setting this value to one day (86400) would mean that a given cached report record would only be read once every day, regardless of how often the report is run.  This also means that the average record in the report would be approximately one day out of date.<br/><br/>Value is specified in seconds.
Setting_Description_reporting.reportRestTimeMS=Milliseconds.  Time between each user read interval.  Having this rest interval will prevent slow performing systems from being overloaded when the report engine runs.  If the default of value of <i>-1</i> is used, the system will compute a value that will result in roughly a 50% slowdown in speed.  A value of zero will result in the report process running as quickly as possible but user performance may suffer.
Setting_Description_reporting.summary.dayValues=Day intervals to include in report summary data
Setting_Description_response.hashMethod=<p>The method of Hashing used to store responses.  Storing the responses as plaintext may facilitate synchronization or migration to other systems.</p><p>This setting only controls the writing of the responses.  Stored responses in other formats can always be read.
Setting_Description_security.cspHeader=Set the HTTP Content-Security-Policy header.  This header instructs the browser to limit the locations from which it will load fonts, scripts and css files.
Setting_Description_security.formNonce.enable=Require a nonce (or unique key) for each form to prevent certain types of cross-site scripting (XSS) attacks.
Setting_Description_security.ldap.simulateBadPassword=This feature will enable Bad Password simulation activity when a forgotten password field is entered.  When an identified user attempts to recover a forgotten password but uses incorrect data, the application will attempt to authenticate to the directory using a known bad password value.  This is done to allow the ldap directory to trigger it's own defense mechanisms against intruders.
Setting_Description_security.loginSession.mode=Mode used to manage login session state.  Local mode is most secure and reliable, but doesn't allow server fail-over.
Setting_Description_security.page.enableRequestSequence=Enable detection of the use of back button or other browser navigation irregularities.  Enabling this option prevents duplicate HTTP form submissions but can sometimes have side effects.
Setting_Description_security.page.leaveNoticeTimeout=When a user navigates away from any page, a notice is sent to the server.   The next time a page is requested, the timeout is checked to determine if the last page leave time was greater then the timeout, and if so, the user's session will be invalidated.  This has the effect of logging out users that navigate away from the application without explicitly logging out.If set to zero, this feature is disabled.
Setting_Description_security.preventFraming=When enabled, prevent this application from being displayed inside an IFrame.  This is done by setting the <i>X-Frame-Options</i> HTTP Header to <i>DENY</i> on all pages.
Setting_Description_security.redirectUrl.whiteList=A list of partial URL fragments.  Any attempt to set the forwardURL or logoutURL via request parameter\n        must match a URL fragment listed here.\n        <ul>\n          <li>Each item will be attempted to be matched from the <b>beginning</b> of the requested URL string.</li>\n          <li>The redirect URL is decoded and parsed before checked against the whitelist.</li>\n          <li>If an error occurs when setting a redirect URL, set the debug logs to TRACE and watch the output as the error occurs.</li>\n          <li>Wildcards or case mis-matches are not permitted, the values must match exactly.</li>\n          <li>If a fragment has the prefix <i>regex\:</i>, the remainder of the fragment is treated as a regular expression.  Regular expression matches must match the entire URL.</li>\n        </ul>\n        <table>\n        <tr><td>Example</td><td>Matches</td><td>Not Matched</td></tr>\n        <td>https\://www.example.com</td><td>https\://www.example.com<br/>https\://www.example.com/<br/>https\://www.example.com/path</td><td>http\://www.example.com<br/>https\://mail.example.com</td></tr>\n        <td>http\://www.example.com/p1</td><td>http\://www.example.com/p1<br/>http\://www.example.com/p1/p2<br/>http\://www.example.com/p1?a1\=v1</td><td>https\://www.example.com/p1<br/>http\://www.example.com/p2</td></tr>\n        <td>/path1</td><td>/path1<br/>/path1/path2<br/>/path1/path2/?param\=v1</td><td>www.example.com/path1/<br/>https\://www.example.com/path1<br/>/path2</td></tr>\n        <td>regex\:^(https?\:\\/\\/)[a-z]*\\.example\\.com.*?$</td><td>http\://www.example.com<br/>https\://www.example.com<br/>http\://www.example.com/p1<br/>http\://mail.example.com/p1</td><td>www.example.com<br/>http\://www.example.org</td></tr>\n        </table>\n
Setting_Description_security.moduleSession.mode=Mode used to manage module session state.  Local mode is most secure and reliable, but doesn't allow server fail-over.
Setting_Description_security.sso.authHeaderName=With this setting enabled, an upstream server can be configured to allow autologin with a only a username, a password is not required.  This setting controls the name of the HTTP header.  When used, a user will likely be prompted for their password to access certain functionality.
Setting_Description_session.maxSeconds=Maximum duration of a session (in seconds).  Having a maximum session lifetime prevents certain types of long-term session fixation attacks.
Setting_Description_shortcut.enable=Enable the shortcuts module.
Setting_Description_shortcut.httpHeaders=HTTP Headers to use to control the visible list of shortcuts.  If this header is present, these values will be used to determine which of the configured shortcuts are available to a user.  Values must correspond to the label values specified as part of the shortcut items.  When this header is present, the system will not use the ldapQuery portion of the shortcut items and will instead display shortcuts only if the label is present in the header.<br/><br/>Values can be set in multiple headers, or by comma separating the values.<br/><br/>A blank value will disable this feature.
Setting_Description_shortcut.items=List of available shortcuts.<br/><br/>Format\: <b>label\:\:url\:\:ldapQuery\:\:description</b><table style\="width\: 400px"><tr><td>label</td><td>Label to show to user</td></tr><tr><td>ldapQuery</td><td>Valid ldap syntax style query, if the user matches this query, then the shortcut will be shown to the user.</td></tr><tr><td>url</td><td>http shortcut to direct the user to</td></tr><tr><td>description</td><td>Long description of the shortcut</td></tr></table>
Setting_Description_shortcut.newWindow=Launch shortcuts in a new window (or tab).
Setting_Description_sms.activation.message=Message text of SMS sent after succesful activation.
Setting_Description_sms.activation.token.message=Message text of token SMS sent during activation process.
Setting_Description_sms.challenge.newpassword.message=Message text of SMS with new password sent during forgotten password process.
Setting_Description_sms.challenge.token.message=Message text of SMS sent during forgotten password token process.
Setting_Description_sms.defaultCountryCode=Default country code for SMS phone numbers, see <a href\="http\://countrycode.org/" target\="_blank">http\://countrycode.org/</a> for a list of country codes. Set to 0 to disable.
Setting_Description_sms.forgottenUsername.message=Text of SMS sent upon successful forgotten username sequence, if so configured.
Setting_Description_sms.updateProfile.token.message=Text of SMS sent during profile update SMS phone number verification.
Setting_Description_sms.gatewayAuthMethod=Method to be used for authentication on the SMS gateway.
Setting_Description_sms.gatewayMethod=HTTP(S) protocol method to be used for sending SMS messages.
Setting_Description_sms.gatewayPassword=User password for the SMS gateway
Setting_Description_sms.gatewayURL=URL for the SMS gateway
Setting_Description_sms.gatewayUser=User name for the SMS gateway
Setting_Description_sms.helpdesk.token.message=Message text of SMS sent during helpdesk token verification process.
Setting_Description_sms.httpRequestHeaders=Additional HTTP request headers for the SMS request, for example SOAPAction for SOAP messages.
Setting_Description_sms.maxTextLength=Maximum length for SMS text. Some services allow texts longer than one message (generally 140 bytes). If the text is longer than the configured maximum, multiple requests will be made.
Setting_Description_sms.newUser.token.message=Text of SMS sent during new user verification process.
Setting_Description_sms.phoneNumberFormat=The format that should be used for the mobile phone number.
Setting_Description_sms.queueMaxAge=Maximum age (in seconds) an sms can wait in the local send queue.  If an sms is in the send queue longer than this time, it will be discarded.  SMS messages only persist in the send queue if there is an IO or network error to the sms gateway server while sending the message.
Setting_Description_sms.requestContentEncoding=Data for fields in the SMS data may need encoding or escaping.
Setting_Description_sms.requestContentType=Content Type for POST data. This is the mime type for the content. This only applies if the HTTP(S) Method is POST. Common values are\:<ul><li><tt>application/x-www-form-urlencoded</tt>\: HTTP form data</li><li><tt>text/plain</tt>\: Plain ASCII data</li><li><tt>text/xml</tt>\: XML document</li></ul>Optionally, a character set can be appended. Eg.\:<ul><li><tt>application/x-www-form-urlencoded; charset\=utf-8</tt>\: HTTP form data in UTF-8 encoding</li></ul>
Setting_Description_sms.requestData=The data to be submitted in order to send an SMS message. You can usecertain codes that will be replaced\:<ul><li><tt>%USER%</tt>\: authentication user name</li><li><tt>%PASS%</tt>\: authentication password</li><li><tt>%SENDERID%</tt>\: sender identification</li><li><tt>%TO%</tt>\: recipient SMS number</li><li><tt>%REQUESTID%</tt>\: randomly generated request identifier</li><li><tt>%MESSAGE%</tt>\: the message to be sent</li></ul>
Setting_Description_sms.requestId.characters=Available characters SMS request ID.
Setting_Description_sms.requestId.length=Length of the SMS request ID.
Setting_Description_sms.responseOkRegex=Regular expressions that can be used to determine whether the SMS has been sent successfully. If the response matches any of the expressions, the transmission is considered succesful. If no expressions are entered, all transmissions are assumed successful. NOTE\: the string must match an entire line. Use <tt>.*</tt> to match anything after the required texts.
Setting_Description_sms.senderID=Alphanumerical sender identification. If blank, the provider will most likely use a default or anonymous sender identification. In most cases the sender ID must be validated by the SMS provider. Please contact your provider for values that can be used as a valid sender identification.
Setting_Description_sms.successResultCodes=HTTP Result codes that will be considered successful send attempts.
Setting_Description_sms.userSmsAttribute=User LDAP attribute containing the user's mobile phone number for SMS.
Setting_Description_sms.useUrlShortener=Enable this option to use a url shortener service like tinyurl.com, bit.ly and goo.gl. This will enable searching the SMS text for http and https urls and replace them with a shortened version. The service to be used can be configured under the Miscellaneous options. Be sure to check View|Advanced.
Setting_Description_template.ldap=<p>This setting will change the default values throughout this configuration to reasonable values based on this value.  Only default (non-modified) settings will be affected.  Any setting that has been modified from the default will be unaffected.</p><p>You can change this setting at any time but use caution when doing so as the overall behavior of the application can change.  After changing this setting the administrator should review and test the application to ensure the desired behavior is invoked.</p>
Setting_Description_template.storage=<p>This setting will change the default values throughout this configuration to reasonable values based on this value.  Only default (non-modified) settings will be affected.  Any setting that has been modified from the default will be unaffected.</p><p>You can change this setting at any time but use caution when doing so as the overall behavior of the application can change.  After changing this setting the administrator should review and test the application to ensure the desired behavior is invoked.</p>
Setting_Description_token.characters=Available characters for the email token.
Setting_Description_token.ldap.attribute=When using the LDAP Token Storage Method, this attribute will be used to store and search for tokens.
Setting_Description_token.length=Length of the email token
Setting_Description_token.lifetime=Length of lifetime a token is valid (in seconds).  Default is one hour.
Setting_Description_token.storageMethod=Storage method used to save issued tokens.<table style\="width\: 400px"><tr><td>Method</td><td>Description</td></tr><tr><td>LocalDB</td><td>Stores the tokens in the local embedded LocalDB database.  Tokens will not be common across multiple application instances.</td></tr><tr><td>DB</td><td>Store the tokens in a configured, remote database.  Tokens will work across multiple application instances.</td></tr><tr><td>Crypto</td><td>Use crypto to create and read tokens, they are not stored locally.  Tokens will work across multiple application instances if they have the same Security Key.  Crypto tokens ignore the length rules and may be too long to use for SMS purposes.</td></tr><tr><td>LDAP</td><td>Use the LDAP directory to store tokens.  Tokens will work across multiple application instances.  LDAP tokens cannot be used as New User Registration tokens.</td></tr></table>
Setting_Description_updateAttributes.check.queryMatch=When the "checkProfile" or "checkAll" parameter is used with the command servlet, this query match will be used to determine if the user should be required to populate the param values. <br/><br/>If this value is blank, then the user's current values will be checked against the form requirements.
Setting_Description_updateAttributes.enable=Enable Update Profile Attributes.  If true, the Update Profile module will be enabled.
Setting_Description_updateAttributes.forceSetup=If true, the Update Profile module will be presented to the user upon login if Update Check Query Match setting evaluation returns true.
Setting_Description_updateAttributes.form=Update Profile Form values.
Setting_Description_updateAttributes.queryMatch=Only allow users who match this query to be update their profile.
Setting_Description_updateAttributes.showConfirmation=Show the update attributes to the user after they configure them.  This will give your users an opportunity to read and review their attributes before submitting, however it will show the responses on the screen and make them visible to anyone else watching the users screen.
Setting_Description_updateAttributes.writeAttributes=Actions to execute after a user's attributes are populated.
Setting_Description_urlshortener.classname=URL Shortening Service class name. The Java full class name that implements a short url service. The corresponding JAR or ZIP file must be included in the classpath, typically in the <i>WEB-INF/lib</i> directory or the application server's lib directory.
Setting_Description_urlshortener.parameters=Name/Value settings used to configure the selected URL shortening service, like for example an API key, username, password or domain name. The settings must be in "name\=value" format, where name is the key value of a valid service setting.
Setting_Description_useXForwardedForHeader=If present, use the X-Forwarded-For HTTP header value as the client IP address instead of the source IP address of the HTTP connection.  X-Forwarded-For headers are typically added by upstream proxies or firewalls and may be the only reliable way to identify the user's source IP address.
Setting_Description_webservices.enableReadAnswers=Allow web services to be used to read stored challenge/response answers of users.  The read responses will be available in whatever hashing method format is being used.
Setting_Description_webservices.external.secret=If specified, external web service clients will be required to provide this value when invoking web services.
Setting_Description_webservices.healthStats.makePublic=Allow the Health and Statistics web services to be enabled publicly.  Normally these require authentication as there may be security sensitive data available.  Enabling this option allows the web services to be used without authentication.  This is setting is required to be enabled for the public (non-authenticated) page at <i>/public/health.jsp</i> to be functional.
Setting_Description_webservices.queryMatch=Users permitted to execute REST web services.
Setting_Description_webservices.thirdParty.queryMatch=Users permitted to execute REST web services and specify a third party via the 'username' parameter.
Setting_Description_webservice.userAttributes=User attributes that are used by various web services and are presented as part of the user's data set.
Setting_Description_wordlistCaseSensitive=If true, the wordlist will be treated as case sensitive for all matches. Changing this value will cause the wordlist to be recompiled.
Setting_Label_accountInfo.viewStatusValues=Viewable Status Fields
Setting_Label_activateUser.allowUnlock=Unlock User During Activation
Setting_Label_activateUser.enable=Enable User Activation
Setting_Label_activateUser.form=Activate User Form
Setting_Label_activateUser.queryMatch=Activation Permission
Setting_Label_activateUser.searchFilter=Activation Search Filter
Setting_Label_activateUser.token.sendMethod=Token Send Method
Setting_Label_activateUser.writePostAttributes=Post-Activation Actions (After Password Change)
Setting_Label_activateUser.writePreAttributes=Activation Actions (Before Password Change)
Setting_Label_https.server.cert.password=HTTPS Certificate Password
Setting_Label_https.server.cert.pkcs12=HTTPS Certificate PKCS12
Setting_Label_https.server.tls.protocols=TLS Protocols
Setting_Label_https.server.tls.ciphers=TLS Ciphers
Setting_Label_audit.syslog.certificates=Syslog Audit Server Certificates
Setting_Label_audit.syslog.servers=Syslog Audit Server
Setting_Label_audit.system.eventList=System Audit Event Types
Setting_Label_audit.user.eventList=User Audit Event Types
Setting_Label_audit.userEvent.toAddress=User Audit Event Email Alerts
Setting_Label_captcha.protectedPages=CAPTCHA Protected Pages
Setting_Label_captcha.recaptcha.privateKey=reCAPTCHA Private Key
Setting_Label_captcha.recaptcha.publicKey=reCAPTCHA Public Key
Setting_Label_captcha.skip.cookie=Captcha Skip Cookie
Setting_Label_captcha.skip.param=Captcha Skip Parameter Value
Setting_Label_cas.clearPassUrl=CAS ClearPass URL
Setting_Label_challenge.allowDuplicateResponses=Allow Duplicate Responses
Setting_Label_challenge.allowSetup.queryMatch=Save Challenge Permission
Setting_Label_challenge.allowUnlock=Allow Unlock
Setting_Label_challenge.caseInsensitive=Case Insensitive Responses
Setting_Label_challenge.enable=Enable Setup Responses
Setting_Label_challenge.enforceMinimumPasswordLifetime=Enforce Minimum Password Lifetime
Setting_Label_challenge.forceSetup=Force Response Setup
Setting_Label_challenge.helpdesk.minRandomsSetup=Minimum Helpdesk Random Challenges Required During Setup
Setting_Label_challenge.helpdesk.randomChallenges=Helpdesk Random Questions
Setting_Label_challenge.helpdesk.requiredChallenges=Helpdesk Required Questions
Setting_Label_challenge.minRandomRequired=Minimum Random Required
Setting_Label_challenge.minRandomsSetup=Minimum Random Challenges Required During Setup
Setting_Label_challenge.policy.queryMatch=Challenge Profile Match
Setting_Label_challenge.profile.list=Challenge Profile
Setting_Label_challenge.randomChallenges=Random Questions
Setting_Label_challenge.requiredAttributes=Required LDAP Attributes
Setting_Label_challenge.requiredChallenges=Required Questions
Setting_Label_challenge.requireResponses=DEPRECATED-Require Responses
Setting_Label_challenge.showConfirmation=Show Response Confirmation
Setting_Label_challenge.token.sendMethod=Token Send Method
Setting_Label_challenge.userAttribute=Response Storage Attribute
Setting_Label_changePassword.writeAttributes=Post Password Change Actions
Setting_Label_command.checkResponses.queryMatch=Check Responses Match
Setting_Label_db.classname=Database Class
Setting_Label_db.columnType.key=Database Key Column Type
Setting_Label_db.columnType.value=Database Value Column Type
Setting_Label_db.debugTrace.enable=Database Trace Logging
Setting_Label_db.jdbc.driver=Database Driver
Setting_Label_db.password=Database Password
Setting_Label_db.url=Database Connection String
Setting_Label_db.username=Database Username
Setting_Label_db.vendor.template=Database Vendor
Setting_Label_disallowedInputs=Disallowed HTTP Inputs
Setting_Label_display.accountInformation=Enable Account Information
Setting_Label_display.activateUser.agreement=Activate User Agreement Message
Setting_Label_display.css.customMobileStyle=Embedded Mobile CSS Stylesheet
Setting_Label_display.css.customMobileStyleLocation=Custom Mobile CSS Stylesheet Location
Setting_Label_display.css.customStyle=Embedded CSS Stylesheet
Setting_Label_display.css.customStyleLocation=Custom CSS Stylesheet Location
Setting_Label_display.custom.resourceBundle=Custom Resource Bundle
Setting_Label_display.hideConfigHealthWarnings=Hide Configuration Health Warnings
Setting_Label_display.homeButton=Show Home Button
Setting_Label_display.idleTimeout=Show Idle Timeout Counter
Setting_Label_display.js.custom=Embedded JavaScript
Setting_Label_display.logoutButton=Show Logout Button
Setting_Label_display.maskPasswordFields=Mask Password Fields
Setting_Label_display.maskResponseFields=Mask Response Fields
Setting_Label_display.newuser.agreement=New User Agreement Message
Setting_Label_display.password.changeAgreement=Password Change Agreement Message
Setting_Label_display.password.completeMessage=Password Change Completion Message
Setting_Label_display.password.guideText=Password Guide Text
Setting_Label_display.passwordHistory=Show Password Event History
Setting_Label_display.showCancelButton=Show Cancel Button
Setting_Label_display.showDetailedErrors=Show Detailed Error Messages
Setting_Label_display.showHidePasswordFields=Enable Showing Masked Fields
Setting_Label_display.showLoginPageOptions=Show Login Page Options
Setting_Label_display.showSuccessPage=Show Success Pages
Setting_Label_display.updateAttributes.agreement=Update Profile Agreement Message
Setting_Label_email.activation=Activation Email
Setting_Label_email.activation.token=Activation Verification Email
Setting_Label_email.adminAlert.toAddress=System Audit Event Email Alerts
Setting_Label_email.challenge.token=Forgotten Password Verification Email
Setting_Label_email.changePassword=Change Password Email
Setting_Label_email.changePassword.helpdesk=Helpdesk Change Password Email
Setting_Label_email.default.fromAddress=Default From Address
Setting_Label_email.guest=Guest Registration Email
Setting_Label_email.helpdesk.token=Helpdesk Verification Email
Setting_Label_email.intruderNotice=Intruder Notice Email
Setting_Label_email.newUser=New User Email
Setting_Label_email.newUser.token=New User Verification Email
Setting_Label_email.queueMaxAge=Maximum Email Queue Age
Setting_Label_email.sendpassword=Send Password Email
Setting_Label_email.sendUsername=Send Username Email
Setting_Label_email.smtp.address=SMTP Email Server Address
Setting_Label_email.smtp.advancedSettings=SMTP Email Advanced Settings
Setting_Label_email.smtp.port=SMTP Email Server Port
Setting_Label_email.smtp.username=SMTP Email Server Username
Setting_Label_email.smtp.userpassword=SMTP Email Server Password
Setting_Label_email.updateguest=Guest Registration Update Email
Setting_Label_email.updateProfile=Update Profile Email
Setting_Label_email.updateProfile.token=Update Profile Email Verification
Setting_Label_email.userMailAttribute=User Email Attribute
Setting_Label_enableSessionVerification=Sticky Session Verification
Setting_Label_events.alert.dailySummary.enable=Daily Summary Alerts
Setting_Label_events.audit.maxAge=LocalDB Audit Events Storage Max Age
Setting_Label_events.fileAppender.level=File Log Level
Setting_Label_events.java.log4jconfigFile=Log4j Configuration File
Setting_Label_events.java.stdoutLevel=Console (StdOut) Log Level
Setting_Label_events.ldap.attribute=User History LDAP Attribute
Setting_Label_events.ldap.maxEvents=User History Maximum Events
Setting_Label_events.pwmDB.logLevel=LocalDB Log Level
Setting_Label_events.pwmDB.maxAge=Maximum Age LocalDB Events
Setting_Label_events.pwmDB.maxEvents=Maximum LocalDB Events
Setting_Label_events.user.eventList=User History Events
Setting_Label_events.user.storageMethod=User History Storage Location
Setting_Label_expireCheckDuringAuth=Check Expire During Authentication
Setting_Label_expirePreTime=Password Pre-Expire Time
Setting_Label_expireWarnTime=Password Expire Warn Time
Setting_Label_external.destToken.urls=External Token Destination Server URLs
Setting_Label_external.macros.urls=External Macro REST Server URLs
Setting_Label_external.pwcheck.urls=External Password Check REST Server URLs
Setting_Label_external.remoteResponses.url=External Remote Responses REST Server URL
Setting_Label_external.webservices.enable=Enable External Web Services
Setting_Label_forceBasicAuth=Force Basic Authentication
Setting_Label_forgottenUsername.enable=Enable Forgotten Username
Setting_Label_forgottenUsername.form=Forgotten Username Form
Setting_Label_forgottenUsername.searchFilter=Forgotten Username Search Filter
Setting_Label_forgottenUsername.sendUsername.sendMethod=Username Send Method
Setting_Label_forgottenUsername.message=Forgotten Username Message
Setting_Label_guest.adminAttribute=Administrator DN Attribute
Setting_Label_guest.adminGroup=Guest Admin Permission
Setting_Label_guest.createContext=Creation Context
Setting_Label_guest.editOriginalAdminOnly=Edit Guest By Original Administrator Only
Setting_Label_guest.enable=Enable Guest Registration
Setting_Label_guest.expirationAttribute=Attribute Used To Store Account Expiration Date
Setting_Label_guest.form=New Guest Form
Setting_Label_guest.maxValidDays=Maximum Duration of Account Validity
Setting_Label_guest.update.form=Update Guest Form
Setting_Label_guest.writeAttributes=Guest Creation Actions
Setting_Label_helpdesk.actions=Helpdesk Actor Actions
Setting_Label_helpdesk.clearOtp.button=Enable Clear One Time Password Settings Button
Setting_Label_helpdesk.clearResponses.button=Enable Clear Responses Button
Setting_Label_helpdesk.clearResponses=Clear Responses on Password Set
Setting_Label_helpdesk.deleteUser.button=Enable Delete User Button
Setting_Label_helpdesk.detail.form=Helpdesk Detail Form
Setting_Label_helpdesk.displayName=User Detail Display Name
Setting_Label_helpdesk.enable=Enable Helpdesk Module
Setting_Label_helpdesk.enableUnlock=Enable Unlock
Setting_Label_helpdesk.enforcePasswordPolicy=Enforce User Password Policy
Setting_Label_helpdesk.filter=Helpdesk Search Filter
Setting_Label_helpdesk.forcePwExpiration=Force Password Expiration On Password Set
Setting_Label_helpdesk.idleTimeout=Idle Timeout Seconds for Helpdesk Users
Setting_Label_helpdesk.otp.verify=Enable OTP Verification Button
Setting_Label_helpdesk.profile.list=Helpdesk Profile
Setting_Label_helpdesk.queryMatch=Helpdesk Profile Match
Setting_Label_helpdesk.result.form=Helpdesk Search Form
Setting_Label_helpdesk.result.limit=Helpdesk Search Result Limit
Setting_Label_helpdesk.searchBase=LDAP Search Base
Setting_Label_helpdesk.search.filters=Helpdesk Profile Search Filter
Setting_Label_helpdesk.sendPassword=Send Password to User
Setting_Label_helpdesk.setPassword.maskValue=Mask Password Value
Setting_Label_helpdesk.setPassword.mode=Set Password UI Mode
Setting_Label_helpdesk.setPassword.writeAttributes=Post Set Password Actions
Setting_Label_helpdesk.token.sendMethod=Token Send Method
Setting_Label_helpdesk.useProxy=Use Proxy Connection
Setting_Label_helpdesk.verificationMethods=Verification Methods
Setting_Label_helpdesk.viewStatusValues=Viewable Status Fields
Setting_Label_http.proxy.url=HTTP Proxy
Setting_Label_idleTimeoutSeconds=Idle Timeout Seconds
Setting_Label_interface.theme=Interface Theme
Setting_Label_intruder.address.checkTime=Intruder Address Check Time
Setting_Label_intruder.address.maxAttempts=Intruder Address Maximum Attempts
Setting_Label_intruder.address.resetTime=Intruder Address Reset Time
Setting_Label_intruder.attribute.checkTime=Intruder Attribute Check Time
Setting_Label_intruder.attribute.maxAttempts=Intruder Attribute Maximum Attempts
Setting_Label_intruder.attribute.resetTime=Intruder Attribute Reset Time
Setting_Label_intruder.enable=Enable Intruder Detection
Setting_Label_intruder.session.maxAttempts=Maximum Intruder Attempts Per Session
Setting_Label_intruder.storageMethod=Intruder Record Storage Location
Setting_Label_intruder.tokenDest.checkTime=Intruder Token Destination Check Time
Setting_Label_intruder.tokenDest.maxAttempts=Intruder Token Destination Attempts
Setting_Label_intruder.tokenDest.resetTime=Intruder Token Destination Reset Time
Setting_Label_intruder.user.checkTime=Intruder User Check Time
Setting_Label_intruder.user.maxAttempts=Intruder User Maximum Attempts
Setting_Label_intruder.user.resetTime=Intruder User Reset Time
Setting_Label_knownLocales=Locales (Languages) and Flags
Setting_Label_ldap.ad.allowAuth.expired=Allow Authentication When Password Expired
Setting_Label_ldap.ad.allowAuth.requireNewPassword=Allow Authentication When "Must Change Password On Next Login" Is Set
Setting_Label_ldap.addObjectClasses=Auto Add Object Classes
Setting_Label_ldap.ad.enforcePwHistoryOnSet=Enforce Password Policy During Forgotten Password
Setting_Label_ldap.ad.proxyForgotten=Use Proxy When Password Forgotten
Setting_Label_ldap.defaultObjectClasses=User Object Class
Setting_Label_ldap.duplicateMode=LDAP Duplicate Mode
Setting_Label_ldap.edirectory.cr.applyWordlist=eDirectory Challenge Set Apply Wordlist
Setting_Label_ldap.edirectory.cr.maxQuestionCharsInAnswer=eDirectory Challenge Set Maximum Question Chars In Answer
Setting_Label_ldap.edirectory.cr.minRandomDuringSetup=eDirectory Challenge Set Minimum Randoms During Setup
Setting_Label_ldap.edirectory.enableNmas=Enable NMAS Extensions
Setting_Label_ldap.edirectory.readChallengeSets=Read eDirectory Challenge Sets
Setting_Label_ldap.edirectory.readUserPwd=Read User Passwords
Setting_Label_ldap.edirectory.storeNmasResponses=Save NMAS Responses
Setting_Label_ldap.edirectory.useNmasResponses=Enable NMAS Responses for Forgotten Password
Setting_Label_ldap.edirectory.ws.pwdMgtURL=UserApp Password SOAP Service URL
Setting_Label_ldap.followReferrals=Follow LDAP Referrals
Setting_Label_ldap.group.label.attribute=User Group Entry Label
Setting_Label_ldap.guidAttribute=LDAP GUID Attribute
Setting_Label_ldap.guid.autoAddValue=Auto Add GUID Value
Setting_Label_ldap.idleTimeout=LDAP Idle Timeout
Setting_Label_ldap.ignoreUnreachableProfiles=Ignore Unreachable LDAP Profiles
Setting_Label_ldap.namingAttribute=LDAP Naming Attribute
Setting_Label_ldap.oracleDS.allowAuth.requireNewPassword=Allow Authentication When "Require Password Change at First Login and After Reset" Is Set
Setting_Label_ldap.oracleDS.enable.manipAllowChangeTime=Allow Manipulation of PasswordAllowChangeTime
Setting_Label_ldap.profile.displayName=LDAP Profile Display Name
Setting_Label_ldap.profile.enabled=LDAP Profile Enabled
Setting_Label_ldap.profile.list=LDAP Directory Profiles
Setting_Label_ldap.proxy.password=LDAP Proxy Password
Setting_Label_ldap.proxy.username=LDAP Proxy User
Setting_Label_ldap.rootContexts=LDAP Contextless Login Roots
Setting_Label_ldap.search.timeoutSeconds=LDAP Search Timeout
Setting_Label_ldap.selectableContextMode=User Selectable LDAP Context/Profile
Setting_Label_ldap.selectableContexts=User Selectable Login Contexts
Setting_Label_ldap.serverCerts=LDAP Certificates
Setting_Label_ldap.serverUrls=LDAP URLs
Setting_Label_ldap.testuser.username=LDAP Test User
Setting_Label_ldap.user.group.attribute=User Group Attribute
Setting_Label_ldap.username.attr=Attribute to use for Username
Setting_Label_ldap.usernameSearchFilter=Username Search Filter
Setting_Label_ldap.wireTrace.enable=Enable LDAP Wire Trace
Setting_Label_locale.cookie.age=Locale Cookie Age
Setting_Label_logoutAfterPasswordChange=Logout After Password Change
Setting_Label_naaf.requiredMethods=NAAF Login Methods
Setting_Label_naaf.userIdentifier=NAAF User Identifier
Setting_Label_naaf.ws.serverCerts=NAAF Web Service Server Certificate
Setting_Label_naaf.ws.url=NAAF Web Service URL
Setting_Label_network.allowMultiIPSession=Allow Roaming Source Network Address
Setting_Label_network.ip.permittedRange=Permitted IP Network Addresses
Setting_Label_network.requiredHttpHeaders=Required HTTP Headers
Setting_Label_network.reverseDNS.enable=Enable Reverse DNS
Setting_Label_newUser.createContext=Creation Context
Setting_Label_newUser.deleteOnFail=Delete On Creation Failure
Setting_Label_newUser.email.verification=Enable New User Email Verification
Setting_Label_newUser.enable=Enable New User Registration
Setting_Label_newUser.form=New User Form
Setting_Label_newUser.minimumWaitTime=New User Minimum Wait Time
Setting_Label_newUser.passwordPolicy.user=Password Policy Template
Setting_Label_newUser.profile.displayName=Profile Display Name
Setting_Label_newUser.profile.list=New User Profile
Setting_Label_newUser.sms.verification=Enable New User SMS Verification
Setting_Label_newUser.username.definition=LDAP Entry ID Definition
Setting_Label_newUser.writeAttributes=New User Actions
Setting_Label_notes.noteText=Configuration Notes
Setting_Label_oauth.idserver.attributesUrl=OAuth Profile Service URL
Setting_Label_oauth.idserver.clientName=OAuth Client ID
Setting_Label_oauth.idserver.codeResolveUrl=OAuth Code Resolve Service URL
Setting_Label_oauth.idserver.dnAttributeName=OAuth Username/DN Login Attribute
Setting_Label_oauth.idserver.loginUrl=OAuth Login URL
Setting_Label_oauth.idserver.secret=OAuth Shared Secret
Setting_Label_oauth.idserver.serverCerts=OAUTH Web Service Server Certificate
Setting_Label_otp.enabled=Enable One Time Passwords
Setting_Label_otp.forceSetup=Force Setup of One Time Passwords
Setting_Label_otp.secret.allowSetup.queryMatch=OTP Secret Setup Permission
Setting_Label_otp.secret.encrypt=Encrypt OTP secret
Setting_Label_otp.secret.identifier=OTP Secret Identifier
Setting_Label_otp.secret.ldap.attribute=OTP Secret LDAP Attribute
Setting_Label_otp.secret.readPreference=OTP Secret Read Location
Setting_Label_otp.secret.recoveryCodes=OTP Recovery Codes
Setting_Label_otp.secret.storageFormat=Token Storage Method
Setting_Label_otp.secret.writePreference=OTP Secret Write Location
Setting_Label_password.allowChange.queryMatch=Change Password Permission
Setting_Label_password.change.requireCurrent=Require Current Password during change
Setting_Label_passwordLastUpdateAttribute=Last Password Update Attribute
Setting_Label_password.policy.ADComplexity=DEPRECATED-Enforce Microsoft-AD 2003 Password Complexity
Setting_Label_password.policy.ADComplexityLevel=Active Directory Password Complexity
Setting_Label_password.policy.ADComplexityMaxViolations=Active Directory 2008 Password Complexity Maximum Violations
Setting_Label_password.policy.allowFirstCharNumeric=Allow First Character Numeric
Setting_Label_password.policy.allowFirstCharSpecial=Allow First Character Special
Setting_Label_password.policy.allowLastCharNumeric=Allow Last Character Numeric
Setting_Label_password.policy.allowLastCharSpecial=Allow Last Character Special
Setting_Label_password.policy.allowNumeric=Allow Numeric Characters
Setting_Label_password.policy.allowSpecial=Allow Special Characters
Setting_Label_password.policy.caseSensitivity=Password is Case Sensitive
Setting_Label_password.policy.changeMessage=Password Change Message
Setting_Label_password.policy.charGroup.minimumMatch=Minimum Character Groups Required
Setting_Label_password.policy.charGroup.regExValues=Character Group Definitions
Setting_Label_password.policy.checkWordlist=Enable Wordlist
Setting_Label_password.policy.disallowCurrent=Disallow Current Password
Setting_Label_password.policy.disallowedAttributes=Disallowed Attributes
Setting_Label_password.policy.disallowedValues=Disallowed Values
Setting_Label_password.policy.maximumAlpha=Maximum Alphabetic
Setting_Label_password.policy.maximumConsecutive=Maximum Consecutive Characters
Setting_Label_password.policy.maximumLength=Maximum Length
Setting_Label_password.policy.maximumLowerCase=Maximum Lowercase
Setting_Label_password.policy.maximumNonAlpha=Maximum Non-Alphabetic
Setting_Label_password.policy.maximumNumeric=Maximum Numeric
Setting_Label_password.policy.maximumOldPasswordChars=Maximum Characters From Previous Password
Setting_Label_password.policy.maximumRepeat=Maximum Repeat
Setting_Label_password.policy.maximumSequentialRepeat=Maximum Sequential Repeat
Setting_Label_password.policy.maximumSpecial=Maximum Special
Setting_Label_password.policy.maximumUpperCase=Maximum Uppercase
Setting_Label_password.policy.minimumAlpha=Minimum Alphabetic
Setting_Label_password.policy.minimumLength=Minimum Length
Setting_Label_password.policy.minimumLifetime=Minimum Lifetime
Setting_Label_password.policy.minimumLowerCase=Minimum Lowercase
Setting_Label_password.policy.minimumNonAlpha=Minimum Non-Alphabetic
Setting_Label_password.policy.minimumNumeric=Minimum Numeric
Setting_Label_password.policy.minimumSpecial=Minimum Special
Setting_Label_password.policy.minimumStrength=Minimum Password Strength
Setting_Label_password.policy.minimumUnique=Minimum Unique Characters
Setting_Label_password.policy.minimumUpperCase=Minimum Uppercase
Setting_Label_password.policy.queryMatch=Password Policy Profile Match
Setting_Label_password.policy.regExMatch=Required Regular Expression Matches
Setting_Label_password.policy.regExNoMatch=Disallowed Regular Expression Matches
Setting_Label_password.policy.ruleText=Password Rule Text
Setting_Label_password.policy.source=Password Policy Source
Setting_Label_password.profile.list=Password Policy Profiles
Setting_Label_password.require.form=Change Password Required Values Form
Setting_Label_password.sharedHistory.age=Shared History Age
Setting_Label_password.sharedHistory.enable=Enable Shared History
Setting_Label_password.showAutoGen=Show Auto Generate Randoms
Setting_Label_password.showStrengthMeter=Show Strength Meter
Setting_Label_passwordSync.enableReplicaCheck=Password Sync Enable Replication Checking
Setting_Label_passwordSyncMaxWaitTime=Password Change Maximum Wait Time
Setting_Label_passwordSyncMinWaitTime=Password Change Minimum Wait Time
Setting_Label_password.wordlist.wordSize=Wordlist Word Size Check
Setting_Label_peopleSearch.detail.form=Search Detail Attributes
Setting_Label_peopleSearch.displayName.cardLabels=Person Detail Display Labels
Setting_Label_peopleSearch.displayName.user=UserDN Name Display
Setting_Label_peopleSearch.enable=Enable PeopleSearch
Setting_Label_peopleSearch.enablePublic=Enable PeopleSearch Public (Non-Authenticated) Access
Setting_Label_peopleSearch.idleTimeout=Idle Timeout Seconds
Setting_Label_peopleSearch.maxCacheSeconds=Search Maximum Cache Seconds
Setting_Label_peopleSearch.orgChart.childAttribute=Org Chart Child Attribute
Setting_Label_peopleSearch.orgChart.parentAttribute=Org Chart Parent Attribute
Setting_Label_peopleSearch.photo.ldapAttribute=LDAP Photo Attribute
Setting_Label_peopleSearch.photo.queryFilter=Photo Display Permission
Setting_Label_peopleSearch.photo.urlOverride=Photo URL Override
Setting_Label_peopleSearch.queryMatch=Permitted Users
Setting_Label_peopleSearch.result.form=Search Result Attributes
Setting_Label_peopleSearch.result.limit=Search Result Limit
Setting_Label_peopleSearch.searchAttributes=Search Attributes
Setting_Label_peopleSearch.searchBase=LDAP Search base
Setting_Label_peopleSearch.searchFilter=People Search LDAP Filter
Setting_Label_peopleSearch.useProxy=Use Proxy Account
Setting_Label_pwmAdmin.queryMatch=Administrator Permission
Setting_Label_pwm.appProperty.overrides=App Property Overrides
Setting_Label_pwmDb.location=LocalDB Location
Setting_Label_pwm.forwardURL=Forward URL
Setting_Label_pwm.homeURL=Home URL
Setting_Label_pwmInstanceName=Instance Name
Setting_Label_pwm.logoutURL=Logout URL
Setting_Label_pwm.publishStats.enable=Enable Anonymous Statistics Publishing
Setting_Label_pwm.publishStats.siteDescription=Site Description
Setting_Label_pwm.requireHTTPS=Require HTTPS
Setting_Label_pwm.securityKey=Security Key
Setting_Label_pwm.seedlist.location=Seedlist File
Setting_Label_pwm.selfURL=Site URL
Setting_Label_pwm.versionCheck.enable=Enable Version Checking
Setting_Label_pwm.wordlist.location=Wordlist File
Setting_Label_recovery.action=Forgotten Password Recovery Mode
Setting_Label_recovery.allowWhenLocked=Allow Forgotten Password when Locked
Setting_Label_recovery.enable=Enable Forgotten Password
Setting_Label_recovery.form=Forgotten Password User Search Form
Setting_Label_recovery.postActions=Forgotten Password Post Actions
Setting_Label_recovery.profile.list=Forgotten Password Profile
Setting_Label_recovery.queryMatch=Forgotten Password Profile Match
Setting_Label_recovery.require.otp=DEPRECATED-Require One Time Password
Setting_Label_recovery.response.readPreference=Response Read Location
Setting_Label_recovery.response.writePreference=Response Write Location
Setting_Label_recovery.searchFilter=Forgotten Password User Search Filter
Setting_Label_recovery.sendNewPassword.sendMethod=New Password Send Method
Setting_Label_recovery.verificationMethods=Verification Methods
Setting_Label_reporting.enable=Enable Directory Reporting
Setting_Label_reporting.job.timeOffset=Reporting Job Time Offset
Setting_Label_reporting.ldap.maxQuerySize=Maximum LDAP Query Size
Setting_Label_reporting.ldap.searchFilter=Reporting Search Filter
Setting_Label_reporting.maxCacheAge=Maximum Cache Age
Setting_Label_reporting.minCacheAge=Minimum Cache Age
Setting_Label_reporting.reportRestTimeMS=Engine User Search Rest Time
Setting_Label_reporting.summary.dayValues=Reporting Summary Day Intervals
Setting_Label_response.hashMethod=Responses Storage Hashing Method
Setting_Label_security.cspHeader=HTTP Content Security Policy Header
Setting_Label_security.formNonce.enable=Enable Form Nonce
Setting_Label_security.ldap.simulateBadPassword=Enable Bad Password Simulation
Setting_Label_security.loginSession.mode=Login Session Mode
Setting_Label_security.page.enableRequestSequence=Enable Back Button Detection
Setting_Label_security.page.leaveNoticeTimeout=Page Leave Notice Timeout
Setting_Label_security.preventFraming=Prevent HTML Framing
Setting_Label_security.redirectUrl.whiteList=Redirect Whitelist
Setting_Label_security.moduleSession.mode=Module Session Mode
Setting_Label_security.sso.authHeaderName=SSO Authentication Header Name
Setting_Label_session.maxSeconds=Maximum Session Duration
Setting_Label_shortcut.enable=Enable Shortcuts
Setting_Label_shortcut.httpHeaders=Shortcut Headers
Setting_Label_shortcut.items=Shortcut Items
Setting_Label_shortcut.newWindow=Launch Shortcuts in New Window
Setting_Label_sms.activation.message=Activation SMS Text
Setting_Label_sms.activation.token.message=Activation Token SMS Text
Setting_Label_sms.challenge.newpassword.message=Forgotten Password New Password SMS Text
Setting_Label_sms.challenge.token.message=Forgotten Password SMS Text
Setting_Label_sms.defaultCountryCode=Default SMS Country Code
Setting_Label_sms.forgottenUsername.message=Forgotten Username SMS Text
Setting_Label_sms.updateProfile.token.message=Update Profile SMS Verification Text
Setting_Label_sms.gatewayAuthMethod=SMS Gateway Authentication Method
Setting_Label_sms.gatewayMethod=HTTP(S) Method
Setting_Label_sms.gatewayPassword=SMS Gateway Password
Setting_Label_sms.gatewayURL=SMS Gateway
Setting_Label_sms.gatewayUser=SMS Gateway User
Setting_Label_sms.helpdesk.token.message=Helpdesk Verification SMS Text
Setting_Label_sms.httpRequestHeaders=SMS Gateway HTTP Request Headers
Setting_Label_sms.maxTextLength=Maximum SMS Text Length
Setting_Label_sms.newUser.token.message=New User Verification SMS Text
Setting_Label_sms.phoneNumberFormat=SMS Phone Number Format
Setting_Label_sms.queueMaxAge=Maximum SMS Queue Age
Setting_Label_sms.requestContentEncoding=SMS Data Content Encoding
Setting_Label_sms.requestContentType=SMS Data Content Type
Setting_Label_sms.requestData=SMS Request Data
Setting_Label_sms.requestId.characters=Request ID Characters
Setting_Label_sms.requestId.length=Request ID Length
Setting_Label_sms.responseOkRegex=Response Regular Expressions
Setting_Label_sms.senderID=SMS Sender ID
Setting_Label_sms.successResultCodes=Successful HTTP Result Codes
Setting_Label_sms.userSmsAttribute=SMS Destintion Address LDAP Attribute
Setting_Label_sms.useUrlShortener=Use URL Shortener
Setting_Label_template.ldap=LDAP Vendor Default Settings
Setting_Label_template.storage=Storage Default Settings
Setting_Label_token.characters=Token Characters
Setting_Label_token.ldap.attribute=Token LDAP attribute name
Setting_Label_token.length=Token Length
Setting_Label_token.lifetime=Token Maximum Lifetime
Setting_Label_token.storageMethod=Token Storage Method
Setting_Label_updateAttributes.check.queryMatch=Update Profile Check Match
Setting_Label_updateAttributes.enable=Enable Update Profile
Setting_Label_updateAttributes.email.verification=Enable Email Verification
Setting_Label_updateAttributes.forceSetup=Force Update Profile
Setting_Label_updateAttributes.form=Update Profile Form
Setting_Label_updateAttributes.queryMatch=Update Profile Match
Setting_Label_updateAttributes.showConfirmation=Show Update Profile Confirmation
Setting_Label_updateAttributes.sms.verification=Enable SMS Verification
Setting_Label_updateAttributes.writeAttributes=Update Profile Actions
Setting_Label_urlshortener.classname=Enable URL Shortening Service Class
Setting_Label_urlshortener.parameters=Configuration Parameters for URL Shortening Service
Setting_Label_useXForwardedForHeader=Use X-Forwarded-For Header
Setting_Label_webservices.enableReadAnswers=Allow Web Services to Read Answers
Setting_Label_webservices.external.secret=External Web Services Secret Key
Setting_Label_webservices.healthStats.makePublic=Enable Public Health and Statistics Web Services
Setting_Label_webservices.queryMatch=External Web Services Permissions
Setting_Label_webservices.thirdParty.queryMatch=Web Services Third Party Permissions
Setting_Label_webservice.userAttributes=Web Service User Attributes
Setting_Label_wordlistCaseSensitive=Wordlist Case Sensitivity


Setting_Description_updateAttributes.email.verification=If true, an email will be sent to the user's email address before the account is updated.  The user must verify receipt of the email before the account will be updated.
Setting_Description_updateAttributes.sms.verification=If true, an SMS will be sent to the user's mobile phone number before the account is updated.  The user must verify receipt of the SMS before the account will be updated.
