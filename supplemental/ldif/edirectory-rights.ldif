#
# Sample LDIF for creating rights for PWM in eDirectory.  
#
# In this sample:
#  - the proxy user is created is "cn=PwmProxy,ou=sa,o=system"
#  - users exist in "ou=users,o=data"
#
# Search and replace the values as appropriate for your environment.
#
# This file is not intended as a direct script to configure rights in your environment, it
# is just useful as a template or sample to get you started.  It is up to the directory owner
# to determine the entries and ACLs needed to run this software optimally.

# Grant users rights for users to configure responses
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 7#subtree#[This]#pwmResponseSet

# Grant users rights for users to configure an OTP secret
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 7#subtree#[This]#pwmOtpSecret



# Create the PWM proxy user.
dn: cn=PwmProxy,ou=sa,o=system
changetype: add
givenName: Pwm
sn: Proxy
objectClass: inetOrgPerson

# update PWM proxy user
dn: cn=PwmProxy,ou=sa,o=system
changetype: modify
replace: givenName
givenName: Pwm
-
replace: sn
sn: Proxy
-
replace: description
description: Proxy User used by PWM to access the LDAP directory. This user must have rights to browse users, and manage password attributes on the user object. Generally, the proxy user needs read/browse object rights to all user objects it will manage, as well as create object rights in the new user container (if enabled).

# change password for PWM proxy user
dn: cn=PwmProxy,ou=sa,o=system
changetype: modify
replace: userPassword
userPassword: netiq000


# Grant browse rights to the users container for the proxy user
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 1#subtree#cn=PwmProxy,ou=sa,o=system#[Entry Rights]

# Grant rights to read cn in the users container for the proxy user
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 3#subtree#cn=PwmProxy,ou=sa,o=system#cn

# Grant rights to the users container for the proxy user
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 3#subtree#cn=PwmProxy,ou=sa,o=system#pwmResponseSet

# Grant rights to write in the users container for the proxy user
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 7#subtree#cn=PwmProxy,ou=sa,o=system#pwmLastPwdUpdate

# Grant rights to the users container for the proxy user
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 3#subtree#cn=PwmProxy,ou=sa,o=system#pwmOtpSecret

# Grant rights to the users container for the proxy user
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 7#subtree#cn=PwmProxy,ou=sa,o=system#objectClass

# Grant rights to the users container for the proxy user
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 7#subtree#cn=PwmProxy,ou=sa,o=system#pwmEventLog

# Grant rights to the users container for the proxy user
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 7#subtree#cn=PwmProxy,ou=sa,o=system#passwordManagement



# Create the PWM test user.
dn: cn=PwmTest,ou=users,o=data
changetype: add
givenName: Pwm
sn: Test
objectClass: inetOrgPerson

# update PWM test user
dn: cn=PwmTest,ou=users,o=data
changetype: modify
replace: givenName
givenName: Pwm
-
replace: sn
sn: Test
-
replace: description
description: The PWM LDAP test user is used to test functionality and access to the ldap directory. This user should be configured similar to a normal user account with normal access privileges. This account will periodically be used to perform a health check, including changing the password of the account. 



# create a container to store PWM groups
dn: ou=pwm,ou=groups,o=data
changetype: add
objectClass: organizationalUnit
description: container to store groups for PWM

# create PWM administrator group
dn: cn=PwmAdmins,ou=pwm,ou=groups,o=data
changetype: add
objectClass: group
description: Group used to determine if a user will be granted administrator rights in PWM.

#Create the PWM web services user group.
dn: cn=PwmWebServicesUsers,ou=pwm,ou=groups,o=data
changetype: add
objectClass: group
description: Users permitted to execute PWM REST web services.

#Create the PWM web services user group.
dn: cn=PwmWebServicesThirdPartyPermissionUsers,ou=pwm,ou=groups,o=data
changetype: add
objectClass: group
description: Users permitted to execute PWM REST web services and specify a third party via the 'username' parameter.

# Grant rights to the users container for the webservices 3rd party user group
dn: ou=users,o=data
changetype: modify
add: ACL
ACL: 7#subtree#cn=PwmWebServicesThirdPartyPermissionUsers,ou=pwm,ou=groups,o=data#pwmResponseSet



# create PWM Web Services Third Party Permissions user for IDM driver
dn: cn=PwmDriver,ou=sa,o=system
changetype: add
objectClass: inetOrgPerson
sn: Driver

# update PWM Web Services Third Party Permissions user for IDM driver
dn: cn=PwmDriver,ou=sa,o=system
changetype: modify
replace: givenName
givenName: PWM
-
replace: sn
sn: Driver
-
replace: description
description: PWM Web Services Third Party Permissions user for IDM driver

# change PWM Web Services Third Party Permissions user for IDM driver
dn: cn=PwmDriver,ou=sa,o=system
changetype: modify
replace: userPassword
userPassword: netiq000


# make user member of PWM Web Services groups
dn: cn=PwmDriver,ou=sa,o=system
changetype: modify
add: groupMembership
groupMembership: cn=PwmWebServicesUsers,ou=pwm,ou=groups,o=data
groupMembership: cn=PwmWebServicesThirdPartyPermissionUsers,ou=pwm,ou=groups,o=data
-
add: securityEquals
securityEquals: cn=PwmWebServicesUsers,ou=pwm,ou=groups,o=data
securityEquals: cn=PwmWebServicesThirdPartyPermissionUsers,ou=pwm,ou=groups,o=data

dn: cn=PwmWebServicesUsers,ou=pwm,ou=groups,o=data
changetype: modify
add: member
member: cn=PwmDriver,ou=sa,o=system
-
add: equivalentToMe
equivalentToMe: cn=PwmDriver,ou=sa,o=system

dn: cn=PwmWebServicesThirdPartyPermissionUsers,ou=pwm,ou=groups,o=data
changetype: modify
add: member
member: cn=PwmDriver,ou=sa,o=system
-
add: equivalentToMe
equivalentToMe: cn=PwmDriver,ou=sa,o=system



# make cnano member of PWM admin group
dn: cn=cnano,ou=users,o=data
changetype: modify
add: groupMembership
groupMembership: cn=PwmAdmins,ou=pwm,ou=groups,o=data
-
add: securityEquals
securityEquals: cn=PwmAdmins,ou=pwm,ou=groups,o=data

dn: cn=PwmAdmins,ou=pwm,ou=groups,o=data
changetype: modify
add: member
member: cn=cnano,ou=users,o=data
-
add: equivalentToMe
equivalentToMe: cn=cnano,ou=users,o=data


